
GetCapabilities
http://geodev12.sso.msp.gouv.qc.ca/igo/edition/app/?request=getcapabilities

DescribeFeature:
http://geodev12.sso.msp.gouv.qc.ca/igo/edition/app/?request=describefeaturetype&layer=ExemplePoint

GetFeatures:
http://geodev12.sso.msp.gouv.qc.ca/igo/edition/app/?request=getfeatures&layer=ExemplePoint&geometry={"type":"Polygon","coordinates":[[[-72.473237,46.0318524],[-70.5057778,46.0318524],[-70.5057778,47.1094126],[-72.473237,47.1094126],[-72.473237,46.0318524]]]}

DeleteFeature:
http://geodev12.sso.msp.gouv.qc.ca/igo/edition/app/?request=delete&layer=ExemplePoint&feature={"identifier":"1","justification":"parce que"}

CreateFeature:
http://geodev12.sso.msp.gouv.qc.ca/igo/edition/app/?request=create&layer=ExemplePoint&feature={"type":"Feature","geometry":{"type":"Point","coordinates":[-71.261569652704,46.872192570791]},"properties":{"commentaire":"parce que","valeur_bool":"t","valeur_integer":1,"valeur_string":"asdf","justification":"parce que"}}

UpdateFeature:
http://geodev12.sso.msp.gouv.qc.ca/igo/edition/app/?request=update&layer=ExemplePoint&feature={"type":"Feature","geometry":{"type":"Point","coordinates":[-71.261569652704,46.872192570791]},"properties":{"no_seq_point_feature_service":2,"commentaire":"parce que","valeur_bool":"t","valeur_integer":1,"valeur_string":"asdf","justification":"parce que"}}



Tests Facade:
// Exécuter la config require afin d'exposer Service
require.ajouterConfig({
    paths: {
        service: '/igo_navigateur/edition/public/js/app/service/service'
    }
});
require(["service"],function(s){
    Service = s;
});


// Charger les instances nécessaires aux tests
var navigateur = Igo.Aide.obtenirNavigateur();
var limites = navigateur.carte.obtenirLimites();
var projection = navigateur.carte.obtenirProjection();
var service = new Service({projectionCarte:projection, url:Igo.Aide.obtenirCheminRacine() + "edition/app/"});
var couche = null;
var description = null;
var occurences = null;

// Tester obtenirCouches
service.obtenirCouches(function(couches){console.log("ObtenirCouches OK"); console.log(couches); couche = couches[0]});

// Tester decrireCouche
service.decrireCouche(couche.name,function(d){description=d;});

// Tester obtenirOccurences
service.obtenirOccurences("ExemplePoint",limites,function(data){occurences=data});

// Tester créerOccurences
service.creerOccurence("ExemplePoint",occurences[0],function(creer){console.log("OK"); console.log(creer);});

// Tester modifierOccurence; test occurence non modifié, doit retourner failure
service.modifierOccurence("ExemplePoint", occurences[0], function(modifier){console.log("OK"); console.log(modifier);});

// Tester modifierOccurence; test occurence modif descriptive, doit fonctionner.
occurences[0].definirPropriete("valeur_bool",false);
service.modifierOccurence("ExemplePoint", occurences[0], function(modifier){console.log("OK"); console.log(modifier);});

// Tester modifierOccurence; test occurence modif geo, doit fonctionner.
var geom_ol = occurences[0]._obtenirGeomOL()
geom_ol.move(10,10);
var o = new Igo.Geometrie.Occurence(geom_ol, occurences[0].obtenirProprietes());
service.modifierOccurence("ExemplePoint", o, function(modifier){console.log("OK"); console.log(modifier);});

// Tester supprimerOccurence
service.supprimerOccurence("ExemplePoint",occurences[0].obtenirPropriete("no_seq_point_feature_service"),"ce point devait être éliminé!!!",function(efface){console.log("OK"); console.log(efface);});    
