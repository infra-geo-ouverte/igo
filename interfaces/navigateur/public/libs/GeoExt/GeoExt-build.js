/*! Igo - v1.1.0 - 2015-06-22 */
Ext.namespace("GeoExt.data"),GeoExt.data.AttributeReader=function(a,b){a=a||{},a.format||(a.format=new OpenLayers.Format.WFSDescribeFeatureType),GeoExt.data.AttributeReader.superclass.constructor.call(this,a,b||a.fields),a.feature&&this.recordType.prototype.fields.add(new Ext.data.Field("value"))},Ext.extend(GeoExt.data.AttributeReader,Ext.data.DataReader,{read:function(a){var b=a.responseXML;return b&&b.documentElement||(b=a.responseText),this.readRecords(b)},readRecords:function(a){var b;b=a instanceof Array?a:this.meta.format.read(a).featureTypes[0].properties;for(var c,d,e,f,g,h,i=this.meta.feature,j=this.recordType,k=j.prototype.fields,l=k.length,m=[],n=0,o=b.length;o>n;++n){f=!1,c=b[n],d={};for(var p=0;l>p;++p){if(h=k.items[p],e=h.name,g=h.convert(c[e]),this.ignoreAttribute(e,g)){f=!0;break}d[e]=g}i&&(g=i.attributes[d.name],void 0!==g&&(this.ignoreAttribute("value",g)?f=!0:d.value=g)),f||(m[m.length]=new j(d))}return{success:!0,records:m,totalRecords:m.length}},ignoreAttribute:function(a,b){var c=!1;if(this.meta.ignore&&this.meta.ignore[a]){var d=this.meta.ignore[a];"string"==typeof d?c=d===b:d instanceof Array?c=d.indexOf(b)>-1:d instanceof RegExp&&(c=d.test(b))}return c}}),Ext.namespace("GeoExt.data"),GeoExt.data.AttributeStoreMixin=function(){return{constructor:function(a){a=a||{},arguments.callee.superclass.constructor.call(this,Ext.apply(a,{proxy:a.proxy||(a.data?void 0:new Ext.data.HttpProxy({url:a.url,disableCaching:!1,method:"GET"})),reader:new GeoExt.data.AttributeReader(a,a.fields||["name","type","restriction",{name:"nillable",type:"boolean"}])})),this.feature&&this.bind()},bind:function(){this.on({update:this.onUpdate,load:this.onLoad,add:this.onAdd,scope:this});var a=[];this.each(function(b){a.push(b)}),this.updateFeature(a)},onUpdate:function(a,b,c){this.updateFeature([b])},onLoad:function(a,b,c){c&&c.add===!0||this.updateFeature(b)},onAdd:function(a,b,c){this.updateFeature(b)},updateFeature:function(a){var b,c,d,e,f,g,h,i=this.feature,j=i.layer;for(b=0,c=a.length;c>b;b++)d=a[b],e=d.get("name"),f=d.get("value"),g=i.attributes[e],g!==f&&(h=!0);if(h&&j&&j.events&&j.events.triggerEvent("beforefeaturemodified",{feature:i})!==!1){for(b=0,c=a.length;c>b;b++)d=a[b],e=d.get("name"),f=d.get("value"),i.attributes[e]=f;j.events.triggerEvent("featuremodified",{feature:i}),j.drawFeature(i)}}}},GeoExt.data.AttributeStore=Ext.extend(Ext.data.Store,GeoExt.data.AttributeStoreMixin()),Ext.namespace("GeoExt.data"),GeoExt.data.FeatureRecord=Ext.data.Record.create([{name:"feature"},{name:"state"},{name:"fid"}]),GeoExt.data.FeatureRecord.prototype.getFeature=function(){return this.get("feature")},GeoExt.data.FeatureRecord.prototype.setFeature=function(a){a!==this.data.feature&&(this.dirty=!0,this.modified||(this.modified={}),void 0===this.modified.feature&&(this.modified.feature=this.data.feature),this.data.feature=a,this.editing||this.afterEdit())},GeoExt.data.FeatureRecord.create=function(a){var b=Ext.extend(GeoExt.data.FeatureRecord,{}),c=b.prototype;if(c.fields=new Ext.util.MixedCollection(!1,function(a){return a.name}),GeoExt.data.FeatureRecord.prototype.fields.each(function(a){c.fields.add(a)}),a)for(var d=0,e=a.length;e>d;d++)c.fields.add(new Ext.data.Field(a[d]));return b.getField=function(a){return c.fields.get(a)},b},Ext.namespace("GeoExt","GeoExt.data"),GeoExt.data.FeatureReader=function(a,b){a=a||{},b instanceof Function||(b=GeoExt.data.FeatureRecord.create(b||a.fields||{})),GeoExt.data.FeatureReader.superclass.constructor.call(this,a,b)},Ext.extend(GeoExt.data.FeatureReader,Ext.data.DataReader,{totalRecords:null,read:function(a){return this.readRecords(a.features)},readRecords:function(a){var b=[];if(a){var c,d,e,f,g,h,i,j,k=this.recordType,l=k.prototype.fields;for(c=0,d=a.length;d>c;c++){if(g=a[c],h={},g.attributes)for(e=0,f=l.length;f>e;e++){if(i=l.items[e],/[\[\.]/.test(i.mapping))try{j=new Function("obj","return obj."+i.mapping)(g.attributes)}catch(m){j=i.defaultValue}else j=g.attributes[i.mapping||i.name]||i.defaultValue;i.convert&&(j=i.convert(j)),h[i.name]=j}h.feature=g,h.state=g.state,h.fid=g.fid;var n=g.state===OpenLayers.State.INSERT?void 0:g.id;b[b.length]=new k(h,n)}}return{records:b,totalRecords:null!=this.totalRecords?this.totalRecords:b.length}}}),Ext.namespace("GeoExt.data"),GeoExt.data.FeatureStoreMixin=function(){return{layer:null,reader:null,featureFilter:null,constructor:function(a){a=a||{},a.reader=a.reader||new GeoExt.data.FeatureReader({},a.fields);var b=a.layer;delete a.layer,a.features&&(a.data=a.features),delete a.features;var c={initDir:a.initDir};delete a.initDir,arguments.callee.superclass.constructor.call(this,a),b&&this.bind(b,c)},bind:function(a,b){if(!this.layer){this.layer=a,b=b||{};var c=b.initDir;void 0==b.initDir&&(c=GeoExt.data.FeatureStore.LAYER_TO_STORE|GeoExt.data.FeatureStore.STORE_TO_LAYER);var d=a.features.slice(0);if(c&GeoExt.data.FeatureStore.STORE_TO_LAYER)for(var e=this.getRange(),f=e.length-1;f>=0;f--)this.layer.addFeatures([e[f].getFeature()]);c&GeoExt.data.FeatureStore.LAYER_TO_STORE&&this.loadData(d,!0),a.events.on({featuresadded:this.onFeaturesAdded,featuresremoved:this.onFeaturesRemoved,featuremodified:this.onFeatureModified,scope:this}),this.on({load:this.onLoad,clear:this.onClear,add:this.onAdd,remove:this.onRemove,update:this.onUpdate,scope:this})}},unbind:function(){this.layer&&(this.layer.events.un({featuresadded:this.onFeaturesAdded,featuresremoved:this.onFeaturesRemoved,featuremodified:this.onFeatureModified,scope:this}),this.un("load",this.onLoad,this),this.un("clear",this.onClear,this),this.un("add",this.onAdd,this),this.un("remove",this.onRemove,this),this.un("update",this.onUpdate,this),this.layer=null)},getRecordFromFeature:function(a){return this.getByFeature(a)||null},getByFeature:function(a){var b;if(a.state!==OpenLayers.State.INSERT)b=this.getById(a.id);else{var c=this.findBy(function(b){return b.getFeature()===a});c>-1&&(b=this.getAt(c))}return b},onFeaturesAdded:function(a){if(!this._adding){var b=a.features,c=b;if(this.featureFilter){c=[];for(var d,e,f,d=0,e=b.length;e>d;d++)f=b[d],this.featureFilter.evaluate(f)!==!1&&c.push(f)}this._adding=!0,this.loadData(c,!0),delete this._adding}},onFeaturesRemoved:function(a){if(!this._removing){var b,c,d,e=a.features;for(d=e.length-1;d>=0;d--)b=e[d],c=this.getByFeature(b),void 0!==c&&(this._removing=!0,this.remove(c),delete this._removing)}},onFeatureModified:function(a){if(!this._updating){var b=a.feature,c=this.getByFeature(b);if(void 0!==c){c.beginEdit();var d=b.attributes;if(d)for(var e=this.recordType.prototype.fields,f=0,g=e.length;g>f;f++){var h=e.items[f],i=h.mapping||h.name;i in d&&c.set(h.name,h.convert(d[i]))}c.set("state",b.state),c.set("fid",b.fid),c.setFeature(b),this._updating=!0,c.endEdit(),delete this._updating}}},addFeaturesToLayer:function(a){var b,c,d;for(d=new Array(c=a.length),b=0;c>b;b++)d[b]=a[b].getFeature();d.length>0&&(this._adding=!0,this.layer.addFeatures(d),delete this._adding)},onLoad:function(a,b,c){c&&c.add===!0||(this._removing=!0,this.layer.removeFeatures(this.layer.features),delete this._removing,this.addFeaturesToLayer(b))},onClear:function(a){this._removing=!0,this.layer.removeFeatures(this.layer.features),delete this._removing},onAdd:function(a,b,c){this._adding||this.addFeaturesToLayer(b)},onRemove:function(a,b,c){if(!this._removing){var d=b.getFeature();null!=this.layer.getFeatureById(d.id)&&(this._removing=!0,this.layer.removeFeatures([b.getFeature()]),delete this._removing)}},onUpdate:function(a,b,c){if(!this._updating){var d=(new GeoExt.data.FeatureRecord).fields,e=b.getFeature();if(e.state!==OpenLayers.State.INSERT&&(e.state=OpenLayers.State.UPDATE),b.fields){var f=this.layer.events.triggerEvent("beforefeaturemodified",{feature:e});if(f!==!1){var g=e.attributes;b.fields.each(function(a){var c=a.mapping||a.name;d.containsKey(c)||(g[c]=b.get(a.name))}),this._updating=!0,this.layer.events.triggerEvent("featuremodified",{feature:e}),delete this._updating,null!=this.layer.getFeatureById(e.id)&&this.layer.drawFeature(e)}}}},destroy:function(){this.unbind(),GeoExt.data.FeatureStore.superclass.destroy.call(this)}}},GeoExt.data.FeatureStore=Ext.extend(Ext.data.Store,new GeoExt.data.FeatureStoreMixin),GeoExt.data.FeatureStore.LAYER_TO_STORE=1,GeoExt.data.FeatureStore.STORE_TO_LAYER=2,Ext.namespace("GeoExt.data"),GeoExt.data.LayerRecord=Ext.data.Record.create([{name:"layer"},{name:"title",type:"string",mapping:"name"}]),GeoExt.data.LayerRecord.prototype.getLayer=function(){return this.get("layer")},GeoExt.data.LayerRecord.prototype.setLayer=function(a){a!==this.data.layer&&(this.dirty=!0,this.modified||(this.modified={}),void 0===this.modified.layer&&(this.modified.layer=this.data.layer),this.data.layer=a,this.editing||this.afterEdit())},GeoExt.data.LayerRecord.prototype.clone=function(a){var b=this.getLayer()&&this.getLayer().clone();return new this.constructor(Ext.applyIf({layer:b},this.data),a||b.id)},GeoExt.data.LayerRecord.create=function(a){var b=Ext.extend(GeoExt.data.LayerRecord,{}),c=b.prototype;if(c.fields=new Ext.util.MixedCollection(!1,function(a){return a.name}),GeoExt.data.LayerRecord.prototype.fields.each(function(a){c.fields.add(a)}),a)for(var d=0,e=a.length;e>d;d++)c.fields.add(new Ext.data.Field(a[d]));return b.getField=function(a){return c.fields.get(a)},b},Ext.namespace("GeoExt","GeoExt.data"),GeoExt.data.LayerReader=function(a,b){a=a||{},b instanceof Function||(b=GeoExt.data.LayerRecord.create(b||a.fields||{})),GeoExt.data.LayerReader.superclass.constructor.call(this,a,b)},Ext.extend(GeoExt.data.LayerReader,Ext.data.DataReader,{totalRecords:null,readRecords:function(a){var b=[];if(a){var c,d,e,f,g,h,i,j,k=this.recordType,l=k.prototype.fields;for(c=0,d=a.length;d>c;c++){for(g=a[c],h={},e=0,f=l.length;f>e;e++)i=l.items[e],j=g[i.mapping||i.name]||i.defaultValue,j=i.convert(j),h[i.name]=j;h.layer=g,b[b.length]=new k(h,g.id)}}return{records:b,totalRecords:null!=this.totalRecords?this.totalRecords:b.length}}}),Ext.namespace("GeoExt.data"),GeoExt.data.LayerStoreMixin=function(){return{map:null,reader:null,constructor:function(a){a=a||{},a.reader=a.reader||new GeoExt.data.LayerReader({},a.fields),delete a.fields;var b=a.map instanceof GeoExt.MapPanel?a.map.map:a.map;delete a.map,a.layers&&(a.data=a.layers),delete a.layers;var c={initDir:a.initDir};delete a.initDir,arguments.callee.superclass.constructor.call(this,a),this.addEvents("bind"),b&&this.bind(b,c)},bind:function(a,b){if(!this.map){this.map=a,b=b||{};var c=b.initDir;void 0==b.initDir&&(c=GeoExt.data.LayerStore.MAP_TO_STORE|GeoExt.data.LayerStore.STORE_TO_MAP);var d=a.layers.slice(0);c&GeoExt.data.LayerStore.STORE_TO_MAP&&this.each(function(a){this.map.addLayer(a.getLayer())},this),c&GeoExt.data.LayerStore.MAP_TO_STORE&&this.loadData(d,!0),a.events.on({changelayer:this.onChangeLayer,addlayer:this.onAddLayer,removelayer:this.onRemoveLayer,scope:this}),this.on({load:this.onLoad,clear:this.onClear,add:this.onAdd,remove:this.onRemove,update:this.onUpdate,scope:this}),this.data.on({replace:this.onReplace,scope:this}),this.fireEvent("bind",this,a)}},unbind:function(){this.map&&(this.map.events.un({changelayer:this.onChangeLayer,addlayer:this.onAddLayer,removelayer:this.onRemoveLayer,scope:this}),this.un("load",this.onLoad,this),this.un("clear",this.onClear,this),this.un("add",this.onAdd,this),this.un("remove",this.onRemove,this),this.data.un("replace",this.onReplace,this),this.map=null)},onChangeLayer:function(a){var b=a.layer,c=this.findBy(function(a,c){return a.getLayer()===b});if(c>-1){var d=this.getAt(c);if("order"===a.property){if(!this._adding&&!this._removing){var e=this.map.getLayerIndex(b);e!==c&&(this._removing=!0,this.remove(d),delete this._removing,this._adding=!0,this.insert(e,[d]),delete this._adding)}}else"name"===a.property?d.set("title",b.name):this.fireEvent("update",this,d,Ext.data.Record.EDIT)}},onAddLayer:function(a){if(!this._adding){var b=a.layer;this._adding=!0,this.loadData([b],!0),delete this._adding}},onRemoveLayer:function(a){if(this.map.unloadDestroy){if(!this._removing){var b=a.layer;this._removing=!0,this.remove(this.getById(b.id)),delete this._removing}}else this.unbind()},onLoad:function(a,b,c){if(Ext.isArray(b)||(b=[b]),c&&!c.add){this._removing=!0;for(var d=this.map.layers.length-1;d>=0;d--)this.map.removeLayer(this.map.layers[d]);delete this._removing;var e=b.length;if(e>0){for(var f=new Array(e),g=0;e>g;g++)f[g]=b[g].getLayer();this._adding=!0,this.map.addLayers(f),delete this._adding}}},onClear:function(a){this._removing=!0;for(var b=this.map.layers.length-1;b>=0;b--)this.map.removeLayer(this.map.layers[b]);delete this._removing},onAdd:function(a,b,c){if(!this._adding){this._adding=!0;for(var d,e=b.length-1;e>=0;--e)d=b[e].getLayer(),this.map.addLayer(d),c!==this.map.layers.length-1&&this.map.setLayerIndex(d,c);delete this._adding}},onRemove:function(a,b,c){if(!this._removing){var d=b.getLayer();null!=this.map.getLayer(d.id)&&(this._removing=!0,this.removeMapLayer(b),delete this._removing)}},onUpdate:function(a,b,c){if(c===Ext.data.Record.EDIT&&b.modified&&b.modified.title){var d=b.getLayer(),e=b.get("title");e!==d.name&&d.setName(e)}},removeMapLayer:function(a){this.map.removeLayer(a.getLayer())},onReplace:function(a,b,c){this.removeMapLayer(b)},getByLayer:function(a){var b=this.findBy(function(b){return b.getLayer()===a});return b>-1?this.getAt(b):void 0},destroy:function(){this.unbind(),GeoExt.data.LayerStore.superclass.destroy.call(this)}}},GeoExt.data.LayerStore=Ext.extend(Ext.data.Store,new GeoExt.data.LayerStoreMixin),GeoExt.data.LayerStore.MAP_TO_STORE=1,GeoExt.data.LayerStore.STORE_TO_MAP=2,Ext.namespace("GeoExt.data"),GeoExt.data.ScaleStore=Ext.extend(Ext.data.Store,{map:null,constructor:function(a){var b=a.map instanceof GeoExt.MapPanel?a.map.map:a.map;delete a.map,a=Ext.applyIf(a,{reader:new Ext.data.JsonReader({},["level","resolution","scale"])}),GeoExt.data.ScaleStore.superclass.constructor.call(this,a),b&&this.bind(b)},bind:function(a,b){this.map=a instanceof GeoExt.MapPanel?a.map:a,this.map.events.register("changebaselayer",this,this.populateFromMap),this.map.baseLayer?this.populateFromMap():this.map.events.register("addlayer",this,this.populateOnAdd)},unbind:function(){this.map&&(this.map.events.unregister("addlayer",this,this.populateOnAdd),this.map.events.unregister("changebaselayer",this,this.populateFromMap),delete this.map)},populateOnAdd:function(a){a.layer.isBaseLayer&&(this.populateFromMap(),this.map.events.unregister("addlayer",this,this.populateOnAdd))},populateFromMap:function(){for(var a=[],b=this.map.baseLayer.resolutions,c=this.map.baseLayer.units,d=b.length-1;d>=0;d--){var e=b[d];a.push({level:d,resolution:e,scale:OpenLayers.Util.getScaleFromResolution(e,c)})}this.loadData(a)},destroy:function(){this.unbind(),GeoExt.data.ScaleStore.superclass.destroy.apply(this,arguments)}}),Ext.namespace("GeoExt.data"),GeoExt.data.StyleReader=Ext.extend(Ext.data.JsonReader,{onMetaChange:function(){GeoExt.data.StyleReader.superclass.onMetaChange.apply(this,arguments),this.recordType.prototype.commit=Ext.createInterceptor(this.recordType.prototype.commit,function(){var a=this.store.reader;a.raw[a.meta.root]=a.meta.storeToData(this.store)})},readRecords:function(a){var b;b=a instanceof OpenLayers.Symbolizer.Raster?"colorMap":"rules",this.raw=a,Ext.applyIf(this.meta,GeoExt.data.StyleReader.metaData[b]);var c={metaData:this.meta};return c[b]=a[b],GeoExt.data.StyleReader.superclass.readRecords.call(this,c)}}),GeoExt.data.StyleReader.metaData={colorMap:{root:"colorMap",idProperty:"filter",fields:[{name:"symbolizers",mapping:function(a){return{fillColor:a.color,fillOpacity:a.opacity,stroke:!1}}},{name:"filter",mapping:"quantity",type:"float"},{name:"label",mapping:function(a){return a.label||a.quantity}}],storeToData:function(a){a.sort("filter","ASC");var b=[];return a.each(function(a){var c=a.get("symbolizers"),d=a.get("label"),e=a.isModified("label"),f=Number(a.get("filter"));a.data.filter=f,(!a.json.label&&!e&&a.isModified("filter")||e&&!d)&&(a.data.label=f),b.push(Ext.apply(a.json,{color:c.fillColor,label:"string"==typeof d?d:void 0,opacity:c.opacity,quantity:f}))}),b}},rules:{root:"rules",fields:["symbolizers","filter",{name:"label",mapping:"title"},"name","description","elseFilter","minScaleDenominator","maxScaleDenominator"],storeToData:function(a){var b=[];return a.each(function(a){var c=a.get("filter");"string"==typeof c&&(c=c?OpenLayers.Format.CQL.prototype.read(c):null),b.push(Ext.apply(a.json,{symbolizers:a.get("symbolizers"),filter:c,title:a.get("label"),name:a.get("name"),description:a.get("description"),elseFilter:a.get("elseFilter"),minScaleDenominator:a.get("minScaleDenominator"),maxScaleDenominator:a.get("maxScaleDenominator")}))}),b}}},Ext.namespace("GeoExt.data"),GeoExt.data.WMSCapabilitiesReader=function(a,b){a=a||{},a.format||(a.format=new OpenLayers.Format.WMSCapabilities),"function"!=typeof b&&(b=GeoExt.data.LayerRecord.create(b||a.fields||[{name:"name",type:"string"},{name:"title",type:"string"},{name:"abstract",type:"string"},{name:"queryable",type:"boolean"},{name:"opaque",type:"boolean"},{name:"noSubsets",type:"boolean"},{name:"cascaded",type:"int"},{name:"fixedWidth",type:"int"},{name:"fixedHeight",type:"int"},{name:"minScale",type:"float"},{name:"maxScale",type:"float"},{name:"prefix",type:"string"},{name:"formats"},{name:"styles"},{name:"srs"},{name:"dimensions"},{name:"bbox"},{name:"llbbox"},{name:"attribution"},{name:"keywords"},{name:"identifiers"},{name:"authorityURLs"},{name:"metadataURLs"},{name:"infoFormats"}])),GeoExt.data.WMSCapabilitiesReader.superclass.constructor.call(this,a,b)},Ext.extend(GeoExt.data.WMSCapabilitiesReader,Ext.data.DataReader,{attributionCls:"gx-attribution",read:function(a){var b=a.responseXML;return b&&b.documentElement||(b=a.responseText),this.readRecords(b)},serviceExceptionFormat:function(a){return OpenLayers.Util.indexOf(a,"application/vnd.ogc.se_inimage")>-1?"application/vnd.ogc.se_inimage":OpenLayers.Util.indexOf(a,"application/vnd.ogc.se_xml")>-1?"application/vnd.ogc.se_xml":a[0]},imageFormat:function(a){var b=a.formats;return a.opaque&&OpenLayers.Util.indexOf(b,"image/jpeg")>-1?"image/jpeg":OpenLayers.Util.indexOf(b,"image/png")>-1?"image/png":OpenLayers.Util.indexOf(b,"image/png; mode=24bit")>-1?"image/png; mode=24bit":OpenLayers.Util.indexOf(b,"image/gif")>-1?"image/gif":b[0]},imageTransparent:function(a){return void 0==a.opaque||!a.opaque},readRecords:function(a){if(("string"==typeof a||a.nodeType)&&(a=this.meta.format.read(a)),a.error)throw new Ext.data.DataReader.Error("invalid-response",a.error);var b=a.version,c=a.capability||{},d=c.request&&c.request.getmap&&c.request.getmap.href,e=c.layers,f=c.exception?c.exception.formats:[],g=this.serviceExceptionFormat(f),h=[];if(d&&e)for(var i,j,k,l,m,n,o=this.recordType.prototype.fields,p=0,q=e.length;q>p;p++)if(i=e[p],i.name){j={};for(var r=0,s=o.length;s>r;r++)m=o.items[r],n=i[m.mapping||m.name]||m.defaultValue,n=m.convert(n),j[m.name]=n;k={attribution:i.attribution?this.attributionMarkup(i.attribution):void 0,minScale:i.minScale,maxScale:i.maxScale},this.meta.layerOptions&&Ext.apply(k,this.meta.layerOptions),l={layers:i.name,exceptions:g,format:this.imageFormat(i),transparent:this.imageTransparent(i),version:b},this.meta.layerParams&&Ext.apply(l,this.meta.layerParams),j.layer=new OpenLayers.Layer.WMS(i.title||i.name,d,l,k),h.push(new this.recordType(j,j.layer.id))}return{totalRecords:h.length,success:!0,records:h}},attributionMarkup:function(a){var b=[];if(a.logo&&b.push("<img class='"+this.attributionCls+"-image' src='"+a.logo.href+"' />"),a.title&&b.push("<span class='"+this.attributionCls+"-title'>"+a.title+"</span>"),a.href)for(var c=0;c<b.length;c++)b[c]="<a class='"+this.attributionCls+"-link' href="+a.href+">"+b[c]+"</a>";return b.join(" ")}}),Ext.namespace("GeoExt.data"),GeoExt.data.WMSCapabilitiesStore=function(a){a=a||{},GeoExt.data.WMSCapabilitiesStore.superclass.constructor.call(this,Ext.apply(a,{proxy:a.proxy||(a.data?void 0:new Ext.data.HttpProxy({url:a.url,disableCaching:!1,method:"GET"})),reader:new GeoExt.data.WMSCapabilitiesReader(a,a.fields)}))},Ext.extend(GeoExt.data.WMSCapabilitiesStore,Ext.data.Store),Ext.namespace("GeoExt.data"),GeoExt.data.WFSCapabilitiesReader=function(a,b){a=a||{},a.format||(a.format=new OpenLayers.Format.WFSCapabilities),"function"!=typeof b&&(b=GeoExt.data.LayerRecord.create(b||a.fields||[{name:"name",type:"string"},{name:"title",type:"string"},{name:"namespace",type:"string",mapping:"featureNS"},{name:"abstract",type:"string"}])),GeoExt.data.WFSCapabilitiesReader.superclass.constructor.call(this,a,b)},Ext.extend(GeoExt.data.WFSCapabilitiesReader,Ext.data.DataReader,{read:function(a){var b=a.responseXML;return b&&b.documentElement||(b=a.responseText),this.readRecords(b)},readRecords:function(a){("string"==typeof a||a.nodeType)&&(a=this.meta.format.read(a));for(var b,c,d,e,f,g,h=a.featureTypeList.featureTypes,i=this.recordType.prototype.fields,j={url:a.capability.request.getfeature.href.post},k=[],l=0,m=h.length;m>l;l++)if(b=h[l],b.name){c={};for(var n=0,o=i.length;o>n;n++)d=i.items[n],e=b[d.mapping||d.name]||d.defaultValue,e=d.convert(e),c[d.name]=e;g={featureType:b.name,featureNS:b.featureNS},this.meta.protocolOptions?Ext.apply(g,this.meta.protocolOptions,j):Ext.apply(g,{},j),f={protocol:new OpenLayers.Protocol.WFS(g),strategies:[new OpenLayers.Strategy.Fixed]};var p=this.meta.layerOptions;p&&Ext.apply(f,Ext.isFunction(p)?p():p),c.layer=new OpenLayers.Layer.Vector(b.title||b.name,f),k.push(new this.recordType(c,c.layer.id))}return{totalRecords:k.length,success:!0,records:k}}}),Ext.namespace("GeoExt.data"),GeoExt.data.WFSCapabilitiesStore=function(a){a=a||{},GeoExt.data.WFSCapabilitiesStore.superclass.constructor.call(this,Ext.apply(a,{proxy:a.proxy||(a.data?void 0:new Ext.data.HttpProxy({url:a.url,disableCaching:!1,method:"GET"})),reader:new GeoExt.data.WFSCapabilitiesReader(a,a.fields)}))},Ext.extend(GeoExt.data.WFSCapabilitiesStore,Ext.data.Store),Ext.namespace("GeoExt.data"),GeoExt.data.WMSDescribeLayerReader=function(a,b){a=a||{},a.format||(a.format=new OpenLayers.Format.WMSDescribeLayer),"function"!=typeof b&&(b=Ext.data.Record.create(b||a.fields||[{name:"owsType",type:"string"},{name:"owsURL",type:"string"},{name:"typeName",type:"string"}])),GeoExt.data.WMSDescribeLayerReader.superclass.constructor.call(this,a,b)},Ext.extend(GeoExt.data.WMSDescribeLayerReader,Ext.data.DataReader,{read:function(a){var b=a.responseXML;return b&&b.documentElement||(b=a.responseText),this.readRecords(b)},readRecords:function(a){("string"==typeof a||a.nodeType)&&(a=this.meta.format.read(a));for(var b,c=[],d=0,e=a.length;e>d;d++)b=a[d],b&&c.push(new this.recordType(b));return{totalRecords:c.length,success:!0,records:c}}}),Ext.namespace("GeoExt.data"),GeoExt.data.WMSDescribeLayerStore=function(a){a=a||{},GeoExt.data.WMSDescribeLayerStore.superclass.constructor.call(this,Ext.apply(a,{proxy:a.proxy||(a.data?void 0:new Ext.data.HttpProxy({url:a.url,disableCaching:!1,method:"GET"})),reader:new GeoExt.data.WMSDescribeLayerReader(a,a.fields)}))},Ext.extend(GeoExt.data.WMSDescribeLayerStore,Ext.data.Store),Ext.namespace("GeoExt.data"),GeoExt.data.WMCReader=function(a,b){a=a||{},a.format||(a.format=new OpenLayers.Format.WMC),"function"!=typeof b&&(b=GeoExt.data.LayerRecord.create(b||a.fields||[{name:"abstract",type:"string"},{name:"metadataURL",type:"string"},{name:"queryable",type:"boolean"},{name:"formats"},{name:"styles"}])),GeoExt.data.WMCReader.superclass.constructor.call(this,a,b)},Ext.extend(GeoExt.data.WMCReader,Ext.data.DataReader,{read:function(a){var b=a.responseXML;return b&&b.documentElement||(b=a.responseText),this.readRecords(b)},readRecords:function(a){var b=this.meta.format;("string"==typeof a||a.nodeType)&&(a=b.read(a));var c=a?a.layersContext:void 0,d=[];if(c){var e,f,g,h,i,j,k,l,m=this.recordType,n=m.prototype.fields;for(e=0,f=c.length;f>e;e++){for(i=c[e],j={},g=0,h=n.length;h>g;g++)k=n.items[g],l=i[k.mapping||k.name]||k.defaultValue,l=k.convert(l),j[k.name]=l;j.layer=b.getLayerFromContext(i),d.push(new this.recordType(j,j.layer.id))}}return{totalRecords:d.length,success:!0,records:d}}}),Ext.namespace("GeoExt"),GeoExt.Action=Ext.extend(Ext.Action,{control:null,activateOnEnable:!1,deactivateOnDisable:!1,map:null,uScope:null,uHandler:null,uToggleHandler:null,uCheckHandler:null,constructor:function(a){this.uScope=a.scope,this.uHandler=a.handler,this.uToggleHandler=a.toggleHandler,this.uCheckHandler=a.checkHandler,a.scope=this,a.handler=this.pHandler,a.toggleHandler=this.pToggleHandler,a.checkHandler=this.pCheckHandler;var b=this.control=a.control;delete a.control,this.activateOnEnable=!!a.activateOnEnable,delete a.activateOnEnable,this.deactivateOnDisable=!!a.deactivateOnDisable,delete a.deactivateOnDisable,b&&(a.map&&(a.map.addControl(b),delete a.map),(a.pressed||a.checked)&&b.map&&b.activate(),b.active&&(a.pressed=!0,a.checked=!0),b.events.on({activate:this.onCtrlActivate,deactivate:this.onCtrlDeactivate,scope:this})),arguments.callee.superclass.constructor.call(this,a)},pHandler:function(a){var b=this.control;b&&b.type==OpenLayers.Control.TYPE_BUTTON&&b.trigger(),this.uHandler&&this.uHandler.apply(this.uScope,arguments)},pToggleHandler:function(a,b){this.changeControlState(b),this.uToggleHandler&&this.uToggleHandler.apply(this.uScope,arguments)},pCheckHandler:function(a,b){this.changeControlState(b),this.uCheckHandler&&this.uCheckHandler.apply(this.uScope,arguments)},changeControlState:function(a){a?this._activating||(this._activating=!0,this.control.activate(),this.initialConfig.pressed=!0,this.initialConfig.checked=!0,this._activating=!1):this._deactivating||(this._deactivating=!0,this.control.deactivate(),this.initialConfig.pressed=!1,this.initialConfig.checked=!1,this._deactivating=!1)},onCtrlActivate:function(){var a=this.control;a.type==OpenLayers.Control.TYPE_BUTTON?this.enable():(this.safeCallEach("toggle",[!0]),this.safeCallEach("setChecked",[!0]))},onCtrlDeactivate:function(){var a=this.control;a.type==OpenLayers.Control.TYPE_BUTTON?this.disable():(this.safeCallEach("toggle",[!1]),this.safeCallEach("setChecked",[!1]))},safeCallEach:function(a,b){for(var c=this.items,d=0,e=c.length;e>d;d++)c[d][a]&&(c[d].rendered?c[d][a].apply(c[d],b):c[d].on({render:c[d][a].createDelegate(c[d],b),single:!0}))},setDisabled:function(a){return!a&&this.activateOnEnable&&this.control&&!this.control.active&&this.control.activate(),a&&this.deactivateOnDisable&&this.control&&this.control.active&&this.control.deactivate(),GeoExt.Action.superclass.setDisabled.apply(this,arguments)}}),Ext.namespace("GeoExt","GeoExt.data"),GeoExt.data.ProtocolProxy=function(a){Ext.apply(this,a),GeoExt.data.ProtocolProxy.superclass.constructor.apply(this,arguments)},Ext.extend(GeoExt.data.ProtocolProxy,Ext.data.DataProxy,{protocol:null,abortPrevious:!0,setParamsAsOptions:!1,response:null,load:function(a,b,c,d,e){if(this.fireEvent("beforeload",this,a)!==!1){var f={params:a||{},request:{callback:c,scope:d,arg:e},reader:b},g=OpenLayers.Function.bind(this.loadResponse,this,f);this.abortPrevious&&this.abortRequest();var h={params:a,callback:g,scope:this};Ext.applyIf(h,e),this.setParamsAsOptions===!0&&(Ext.applyIf(h,h.params),delete h.params),this.response=this.protocol.read(h)}else c.call(d||this,null,e,!1)},abortRequest:function(){this.response&&(this.protocol.abort(this.response),this.response=null)},loadResponse:function(a,b){if(b.success()){var c=a.reader.read(b);this.fireEvent("load",this,a,a.request.arg),a.request.callback.call(a.request.scope,c,a.request.arg,!0)}else this.fireEvent("loadexception",this,a,b),a.request.callback.call(a.request.scope,null,a.request.arg,!1)}}),Ext.namespace("GeoExt"),GeoExt.FeatureRenderer=Ext.extend(Ext.BoxComponent,{feature:void 0,symbolizers:[OpenLayers.Feature.Vector.style["default"]],symbolType:"Polygon",resolution:1,minWidth:20,minHeight:20,renderers:["SVG","VML","Canvas"],rendererOptions:null,pointFeature:void 0,lineFeature:void 0,polygonFeature:void 0,renderer:null,initComponent:function(){GeoExt.FeatureRenderer.superclass.initComponent.apply(this,arguments),Ext.applyIf(this,{pointFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(0,0)),lineFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString([new OpenLayers.Geometry.Point(-8,-3),new OpenLayers.Geometry.Point(-3,3),new OpenLayers.Geometry.Point(3,-3),new OpenLayers.Geometry.Point(8,3)])),polygonFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing([new OpenLayers.Geometry.Point(-8,-4),new OpenLayers.Geometry.Point(-6,-6),new OpenLayers.Geometry.Point(6,-6),new OpenLayers.Geometry.Point(8,-4),new OpenLayers.Geometry.Point(8,4),new OpenLayers.Geometry.Point(6,6),new OpenLayers.Geometry.Point(-6,6),new OpenLayers.Geometry.Point(-8,4)])]))}),this.feature||this.setFeature(null,{draw:!1}),this.addEvents("click")},initCustomEvents:function(){this.clearCustomEvents(),this.el.on("click",this.onClick,this)},clearCustomEvents:function(){this.el&&this.el.removeAllListeners&&this.el.removeAllListeners()},onClick:function(){this.fireEvent("click",this)},onRender:function(a,b){this.el||(this.el=document.createElement("div"),this.el.id=this.getId()),this.renderer&&this.renderer.supported()||this.assignRenderer(),this.renderer.map={getResolution:function(){return this.resolution}.createDelegate(this)},GeoExt.FeatureRenderer.superclass.onRender.apply(this,arguments),this.drawFeature()},afterRender:function(){GeoExt.FeatureRenderer.superclass.afterRender.apply(this,arguments),this.initCustomEvents()},onResize:function(a,b){this.setRendererDimensions(),GeoExt.FeatureRenderer.superclass.onResize.apply(this,arguments)},setRendererDimensions:function(){var a=this.feature.geometry.getBounds(),b=a.getWidth(),c=a.getHeight(),d=this.initialConfig.resolution;d||(d=Math.max(b/this.width||0,c/this.height||0)||1),this.resolution=d;var e=Math.max(this.width||this.minWidth,b/d),f=Math.max(this.height||this.minHeight,c/d),g=a.getCenterPixel(),h=e*d/2,i=f*d/2,j=new OpenLayers.Bounds(g.x-h,g.y-i,g.x+h,g.y+i);this.renderer.setSize(new OpenLayers.Size(Math.round(e),Math.round(f))),this.renderer.setExtent(j,!0)},assignRenderer:function(){for(var a=0,b=this.renderers.length;b>a;++a){var c=OpenLayers.Renderer[this.renderers[a]];if(c&&c.prototype.supported()){this.renderer=new c(this.el,this.rendererOptions);break}}},setSymbolizers:function(a,b){this.symbolizers=a,(!b||b.draw)&&this.drawFeature()},setSymbolType:function(a,b){this.symbolType=a,this.setFeature(null,b)},setFeature:function(a,b){this.feature=a||this[this.symbolType.toLowerCase()+"Feature"],(!b||b.draw)&&this.drawFeature()},drawFeature:function(){this.renderer.clear(),this.setRendererDimensions();for(var a,b,c,d=OpenLayers.Symbolizer,e=d&&d.Text,f=0,g=this.symbolizers.length;g>f;++f)a=this.symbolizers[f],b=this.feature,e&&a instanceof e||(d&&a instanceof d?(a=a.clone(),this.initialConfig.feature||(c=a.CLASS_NAME.split(".").pop().toLowerCase(),b=this[c+"Feature"])):a=Ext.apply({},a),this.renderer.drawFeature(b.clone(),a))},update:function(a){a=a||{},a.feature?this.setFeature(a.feature,{draw:!1}):a.symbolType&&this.setSymbolType(a.symbolType,{draw:!1}),a.symbolizers&&this.setSymbolizers(a.symbolizers,{draw:!1}),this.drawFeature()},beforeDestroy:function(){this.clearCustomEvents(),this.renderer&&this.renderer.destroy()}}),Ext.reg("gx_renderer",GeoExt.FeatureRenderer),Ext.namespace("GeoExt"),GeoExt.MapPanel=Ext.extend(Ext.Panel,{map:null,layers:null,center:null,zoom:null,extent:null,prettyStateKeys:!1,stateEvents:["aftermapmove","afterlayervisibilitychange","afterlayeropacitychange","afterlayerorderchange","afterlayernamechange","afterlayeradd","afterlayerremove"],initComponent:function(){this.map instanceof OpenLayers.Map||(this.map=new OpenLayers.Map(Ext.applyIf(this.map||{},{allOverlays:!0})));var a=this.layers;(!a||a instanceof Array)&&(this.layers=new GeoExt.data.LayerStore({layers:a,map:this.map.layers.length>0?this.map:null
})),"string"==typeof this.center?this.center=OpenLayers.LonLat.fromString(this.center):this.center instanceof Array&&(this.center=new OpenLayers.LonLat(this.center[0],this.center[1])),"string"==typeof this.extent?this.extent=OpenLayers.Bounds.fromString(this.extent):this.extent instanceof Array&&(this.extent=OpenLayers.Bounds.fromArray(this.extent)),GeoExt.MapPanel.superclass.initComponent.call(this),this.addEvents("aftermapmove","afterlayervisibilitychange","afterlayeropacitychange","afterlayerorderchange","afterlayernamechange","afterlayeradd","afterlayerremove"),this.map.events.on({moveend:this.onMoveend,changelayer:this.onChangelayer,addlayer:this.onAddlayer,removelayer:this.onRemovelayer,scope:this})},onMoveend:function(){this.fireEvent("aftermapmove")},onChangelayer:function(a){a.property&&("visibility"===a.property?this.fireEvent("afterlayervisibilitychange"):"order"===a.property?this.fireEvent("afterlayerorderchange"):"name"===a.property?this.fireEvent("afterlayernamechange"):"opacity"===a.property&&this.fireEvent("afterlayeropacitychange"))},onAddlayer:function(){this.fireEvent("afterlayeradd")},onRemovelayer:function(){this.fireEvent("afterlayerremove")},applyState:function(a){this.center=new OpenLayers.LonLat(a.x,a.y),this.zoom=a.zoom;var b,c,d,e,f,g,h=this.map.layers;for(b=0,c=h.length;c>b;b++)d=h[b],e=this.prettyStateKeys?d.name:d.id,f=a["visibility_"+e],void 0!==f&&(f=/^true$/i.test(f),d.isBaseLayer?f&&this.map.setBaseLayer(d):d.setVisibility(f)),g=a["opacity_"+e],void 0!==g&&d.setOpacity(g)},getState:function(){var a;if(this.map){var b=this.map.getCenter();a=b?{x:b.lon,y:b.lat,zoom:this.map.getZoom()}:{};var c,d,e,f,g=this.map.layers;for(c=0,d=g.length;d>c;c++)e=g[c],f=this.prettyStateKeys?e.name:e.id,a["visibility_"+f]=e.getVisibility(),a["opacity_"+f]=null==e.opacity?1:e.opacity;return a}},updateMapSize:function(){this.map&&this.map.updateSize()},renderMap:function(){var a=this.map;a.render(this.body.dom),this.layers.bind(a),a.layers.length>0?this.setInitialExtent():this.layers.on("add",this.setInitialExtent,this,{single:!0})},setInitialExtent:function(){var a=this.map;this.center||null!=this.zoom?a.setCenter(this.center,this.zoom):this.extent?a.zoomToExtent(this.extent):a.zoomToMaxExtent()},afterRender:function(){GeoExt.MapPanel.superclass.afterRender.apply(this,arguments),this.ownerCt?(this.ownerCt.on("move",this.updateMapSize,this),this.ownerCt.on({afterlayout:this.afterLayout,scope:this})):this.renderMap()},afterLayout:function(){var a=this.getInnerWidth()-this.body.getBorderWidth("lr"),b=this.getInnerHeight()-this.body.getBorderWidth("tb");a>0&&b>0&&(this.ownerCt.un("afterlayout",this.afterLayout,this),this.renderMap())},onResize:function(){GeoExt.MapPanel.superclass.onResize.apply(this,arguments),this.updateMapSize()},onBeforeAdd:function(a){"function"==typeof a.addToMapPanel&&a.addToMapPanel(this),GeoExt.MapPanel.superclass.onBeforeAdd.apply(this,arguments)},remove:function(a,b){"function"==typeof a.removeFromMapPanel&&a.removeFromMapPanel(this),GeoExt.MapPanel.superclass.remove.apply(this,arguments)},beforeDestroy:function(){this.ownerCt&&this.ownerCt.un("move",this.updateMapSize,this),this.map&&this.map.events&&this.map.events.un({moveend:this.onMoveend,changelayer:this.onChangelayer,addlayer:this.onAddlayer,removelayer:this.onRemovelayer,scope:this}),this.initialConfig.map&&this.initialConfig.map instanceof OpenLayers.Map||this.map&&this.map.destroy&&this.map.destroy(),delete this.map,GeoExt.MapPanel.superclass.beforeDestroy.apply(this,arguments)}}),GeoExt.MapPanel.guess=function(){return Ext.ComponentMgr.all.find(function(a){return a instanceof GeoExt.MapPanel})},Ext.reg("gx_mappanel",GeoExt.MapPanel),Ext.namespace("GeoExt"),GeoExt.Popup=Ext.extend(Ext.Window,{anchored:!0,map:null,panIn:!0,unpinnable:!0,location:null,insideViewport:null,animCollapse:!1,draggable:!1,shadow:!1,popupCls:"gx-popup",ancCls:null,anchorPosition:"auto",initComponent:function(){this.map instanceof GeoExt.MapPanel&&(this.map=this.map.map),!this.map&&this.location instanceof OpenLayers.Feature.Vector&&this.location.layer&&(this.map=this.location.layer.map),this.location instanceof OpenLayers.Feature.Vector&&(this.location=this.location.geometry),this.location instanceof OpenLayers.Geometry?("function"==typeof this.location.getCentroid&&(this.location=this.location.getCentroid()),this.location=this.location.getBounds().getCenterLonLat()):this.location instanceof OpenLayers.Pixel&&(this.location=this.map.getLonLatFromViewPortPx(this.location));var a=this.map.getExtent();a&&this.location&&(this.insideViewport=a.containsLonLat(this.location)),this.anchored&&this.addAnchorEvents(),this.baseCls=this.popupCls+" "+this.baseCls,this.elements+=",anc",GeoExt.Popup.superclass.initComponent.call(this)},onRender:function(a,b){GeoExt.Popup.superclass.onRender.call(this,a,b),this.ancCls=this.popupCls+"-anc",this.createElement("anc",this.el.dom)},initTools:function(){this.unpinnable&&this.addTool({id:"unpin",handler:this.unanchorPopup.createDelegate(this,[])}),GeoExt.Popup.superclass.initTools.call(this)},show:function(){GeoExt.Popup.superclass.show.apply(this,arguments),this.anchored&&(this.position(),this.panIn&&!this._mapMove&&this.panIntoView())},maximize:function(){!this.maximized&&this.anc&&this.unanchorPopup(),GeoExt.Popup.superclass.maximize.apply(this,arguments)},setSize:function(a,b){if(this.anc){var c=this.anc.getSize();"object"==typeof a?(b=a.height-c.height,a=a.width):isNaN(b)||(b-=c.height)}GeoExt.Popup.superclass.setSize.call(this,a,b)},position:function(){if(this._mapMove===!0&&(this.insideViewport=this.map.getExtent().containsLonLat(this.location),this.insideViewport!==this.isVisible()&&this.setVisible(this.insideViewport)),this.isVisible()){var a=this.map.getPixelFromLonLat(this.location),b=Ext.fly(this.map.div).getBox(!0),c=a.y+b.y,d=a.x+b.x,e=this.el.getSize(),f=this.anc.getSize(),g=this.anchorPosition;if(g.indexOf("right")>-1||a.x>b.width/2){this.anc.addClass("right");var h=this.el.getX(!0)+e.width-this.anc.getX(!0)-f.width;d-=e.width-h-f.width/2}else{this.anc.removeClass("right");var i=this.anc.getLeft(!0);d-=i+f.width/2}g.indexOf("bottom")>-1||a.y>b.height/2?(this.anc.removeClass("top"),c-=e.height+f.height):(this.anc.addClass("top"),c+=f.height),this.setPosition(d,c)}},unanchorPopup:function(){this.removeAnchorEvents(),this.draggable=!0,this.header.addClass("x-window-draggable"),this.dd=new Ext.Window.DD(this),this.anc.remove(),this.anc=null,this.tools.unpin.hide()},panIntoView:function(){var a=Ext.fly(this.map.div).getBox(!0),b=this.getPosition(!0);b[0]-=a.x,b[1]-=a.y;var c=[a.width,a.height],d=this.getSize(),e=[b[0],b[1]],f=this.map.paddingForPopups;b[0]<f.left?e[0]=f.left:b[0]+d.width>c[0]-f.right&&(e[0]=c[0]-f.right-d.width),b[1]<f.top?e[1]=f.top:b[1]+d.height>c[1]-f.bottom&&(e[1]=c[1]-f.bottom-d.height);var g=b[0]-e[0],h=b[1]-e[1];this.map.pan(g,h)},onMapMove:function(){this.hidden&&this.insideViewport||(this._mapMove=!0,this.position(),delete this._mapMove)},addAnchorEvents:function(){this.map.events.on({move:this.onMapMove,scope:this}),this.on({resize:this.position,collapse:this.position,expand:this.position,scope:this})},removeAnchorEvents:function(){this.map.events.un({move:this.onMapMove,scope:this}),this.un("resize",this.position,this),this.un("collapse",this.position,this),this.un("expand",this.position,this)},beforeDestroy:function(){this.anchored&&this.removeAnchorEvents(),GeoExt.Popup.superclass.beforeDestroy.call(this)}}),Ext.reg("gx_popup",GeoExt.Popup),Ext.namespace("GeoExt.form"),GeoExt.form.toFilter=function(a,b,c){a instanceof Ext.form.FormPanel&&(a=a.getForm());var d=[],e=a.getValues(!1);for(var f in e){var g,h=f.split("__"),i=e[f];if(h.length>1&&void 0!==(g=GeoExt.form.toFilter.FILTER_MAP[h[1]])?f=h[0]:g=OpenLayers.Filter.Comparison.EQUAL_TO,g===OpenLayers.Filter.Comparison.LIKE)switch(c){case GeoExt.form.ENDS_WITH:i=".*"+i;break;case GeoExt.form.STARTS_WITH:i+=".*";break;case GeoExt.form.CONTAINS:i=".*"+i+".*"}d.push(new OpenLayers.Filter.Comparison({type:g,value:i,property:f}))}return 1==d.length&&b!=OpenLayers.Filter.Logical.NOT?d[0]:new OpenLayers.Filter.Logical({type:b||OpenLayers.Filter.Logical.AND,filters:d})},GeoExt.form.toFilter.FILTER_MAP={eq:OpenLayers.Filter.Comparison.EQUAL_TO,ne:OpenLayers.Filter.Comparison.NOT_EQUAL_TO,lt:OpenLayers.Filter.Comparison.LESS_THAN,le:OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO,gt:OpenLayers.Filter.Comparison.GREATER_THAN,ge:OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO,like:OpenLayers.Filter.Comparison.LIKE},GeoExt.form.ENDS_WITH=1,GeoExt.form.STARTS_WITH=2,GeoExt.form.CONTAINS=3,GeoExt.form.recordToField=function(a,b){b=b||{};var c=a.get("type");if("object"==typeof c&&c.xtype)return c;c=c.split(":").pop();var d,e=a.get("name"),f=a.get("restriction")||{},g=a.get("nillable")||!1,h=a.get("label"),i=b.labelTpl;if(i){var j=i instanceof Ext.Template?i:new Ext.XTemplate(i);h=j.apply(a.data)}else null==h&&(h=e);var k={name:e,labelStyle:g?"":null!=b.mandatoryFieldLabelStyle?b.mandatoryFieldLabelStyle:"font-weight:bold;"},l=GeoExt.form.recordToField.REGEXES;if(c.match(l.text)){var m=void 0!==f.maxLength?parseFloat(f.maxLength):void 0,n=void 0!==f.minLength?parseFloat(f.minLength):void 0;d=Ext.apply({xtype:"textfield",fieldLabel:h,maxLength:m,minLength:n},k)}else if(c.match(l.number)){var o=void 0!==f.maxInclusive?parseFloat(f.maxInclusive):void 0,p=void 0!==f.minInclusive?parseFloat(f.minInclusive):void 0;d=Ext.apply({xtype:"numberfield",fieldLabel:h,maxValue:o,minValue:p},k)}else if(c.match(l["boolean"])){d=Ext.apply({xtype:"checkbox"},k);var q=b.checkboxLabelProperty||"boxLabel";d[q]=h}else c.match(l.date)&&(d=Ext.apply({xtype:"datefield",fieldLabel:h,format:"c"},k));return d},GeoExt.form.recordToField.REGEXES={text:new RegExp("^(text|string)$","i"),number:new RegExp("^(number|float|decimal|double|int|long|integer|short)$","i"),"boolean":new RegExp("^(boolean)$","i"),date:new RegExp("^(date|dateTime)$","i")},Ext.namespace("GeoExt.form"),GeoExt.form.SearchAction=Ext.extend(Ext.form.Action,{type:"search",response:null,constructor:function(a,b){GeoExt.form.SearchAction.superclass.constructor.call(this,a,b)},run:function(){var a=this.options,b=GeoExt.form.toFilter(this.form,a.logicalOp,a.wildcard);a.clientValidation===!1||this.form.isValid()?(a.abortPrevious&&this.form.prevResponse&&a.protocol.abort(this.form.prevResponse),this.form.prevResponse=a.protocol.read(Ext.applyIf({filter:b,callback:this.handleResponse,scope:this},a))):a.clientValidation!==!1&&(this.failureType=Ext.form.Action.CLIENT_INVALID,this.form.afterAction(this,!1))},handleResponse:function(a){this.form.prevResponse=null,this.response=a,a.success()?this.form.afterAction(this,!0):this.form.afterAction(this,!1);var b=this.options;b.callback&&b.callback.call(b.scope,a)}}),Ext.namespace("GeoExt.form"),GeoExt.form.BasicForm=Ext.extend(Ext.form.BasicForm,{protocol:null,prevResponse:null,autoAbort:!0,doAction:function(a,b){return"search"==a&&(b=Ext.applyIf(b||{},{protocol:this.protocol,abortPrevious:this.autoAbort}),a=new GeoExt.form.SearchAction(this,b)),GeoExt.form.BasicForm.superclass.doAction.call(this,a,b)},search:function(a){return this.doAction("search",a)}}),Ext.namespace("GeoExt.form"),GeoExt.form.FormPanel=Ext.extend(Ext.form.FormPanel,{protocol:null,createForm:function(){return delete this.initialConfig.listeners,new GeoExt.form.BasicForm(null,this.initialConfig)},search:function(a){this.getForm().search(a)}}),Ext.reg("gx_formpanel",GeoExt.form.FormPanel),Ext.namespace("GeoExt.grid"),GeoExt.grid.SymbolizerColumn=Ext.extend(Ext.grid.Column,{renderer:function(a,b){if(null!=a){var c=Ext.id();return window.setTimeout(function(){var b=Ext.get(c);b&&new GeoExt.FeatureRenderer({symbolizers:a instanceof Array?a:[a],renderTo:b})},0),b.css="gx-grid-symbolizercol",'<div id="'+c+'"></div>'}}}),Ext.grid.Column.types.gx_symbolizercolumn=GeoExt.grid.SymbolizerColumn,Ext.namespace("GeoExt"),GeoExt.SliderTip=Ext.extend(Ext.slider.Tip,{hover:!0,minWidth:10,offsets:[0,-10],dragging:!1,init:function(a){GeoExt.SliderTip.superclass.init.apply(this,arguments),this.hover&&a.on("render",this.registerThumbListeners,this),this.slider=a},registerThumbListeners:function(){for(var a,b,c=0,d=this.slider.thumbs.length;d>c;++c)a=this.slider.thumbs[c],b=a.tracker.el,function(a,b){b.on({mouseover:function(b){this.onSlide(this.slider,b,a),this.dragging=!1},mouseout:function(){this.dragging||this.hide.apply(this,arguments)},scope:this})}.apply(this,[a,b])},onSlide:function(a,b,c){return this.dragging=!0,GeoExt.SliderTip.superclass.onSlide.apply(this,arguments)}}),Ext.namespace("GeoExt"),GeoExt.LayerOpacitySliderTip=Ext.extend(GeoExt.SliderTip,{template:"<div>{opacity}%</div>",compiledTemplate:null,init:function(a){this.compiledTemplate=new Ext.Template(this.template),GeoExt.LayerOpacitySliderTip.superclass.init.call(this,a)},getText:function(a){var b={opacity:a.value};return this.compiledTemplate.apply(b)}}),Ext.namespace("GeoExt"),GeoExt.ZoomSliderTip=Ext.extend(GeoExt.SliderTip,{template:"<div>Zoom Level: {zoom}</div><div>Resolution: {resolution}</div><div>Scale: 1 : {scale}</div>",compiledTemplate:null,init:function(a){this.compiledTemplate=new Ext.Template(this.template),GeoExt.ZoomSliderTip.superclass.init.call(this,a)},getText:function(a){var b={zoom:a.value,resolution:this.slider.getResolution(),scale:Math.round(this.slider.getScale())};return this.compiledTemplate.apply(b)}}),Ext.namespace("GeoExt.tree"),GeoExt.tree.LayerNodeUI=Ext.extend(Ext.tree.TreeNodeUI,{constructor:function(a){GeoExt.tree.LayerNodeUI.superclass.constructor.apply(this,arguments)},render:function(a){var b=this.node.attributes;void 0===b.checked&&(b.checked=this.node.layer.getVisibility()),void 0===b.disabled&&this.node.autoDisable&&(this.node.disabled=this.node.layer.inRange===!1||!this.node.layer.calculateInRange()),GeoExt.tree.LayerNodeUI.superclass.render.apply(this,arguments);var c=this.checkbox;if(b.checkedGroup){var d=Ext.DomHelper.insertAfter(c,['<input type="radio" name="',b.checkedGroup,'_checkbox" class="',c.className,c.checked?'" checked="checked"':"",'"></input>'].join(""));d.defaultChecked=c.defaultChecked,Ext.get(c).remove(),this.checkbox=d}this.enforceOneVisible()},onClick:function(a){a.getTarget(".x-tree-node-cb",1)?this.toggleCheck(this.isChecked()):GeoExt.tree.LayerNodeUI.superclass.onClick.apply(this,arguments)},toggleCheck:function(a){a=void 0===a?!this.isChecked():a,GeoExt.tree.LayerNodeUI.superclass.toggleCheck.call(this,a),this.enforceOneVisible()},enforceOneVisible:function(){var a=this.node.attributes,b=a.checkedGroup;if(b&&"gx_baselayer"!==b){var c=this.node.layer,d=this.node.getOwnerTree().getChecked(),e=0;Ext.each(d,function(d){var f=d.layer;d.hidden||d.attributes.checkedGroup!==b||(e++,f!=c&&a.checked&&f.setVisibility(!1))}),0===e&&0==a.checked&&c.setVisibility(!0)}},appendDDGhost:function(a){var b=this.elNode.cloneNode(!0),c=Ext.DomQuery.select("input[type='radio']",b);Ext.each(c,function(a){a.name=a.name+"_clone"}),a.appendChild(b)}}),GeoExt.tree.LayerNode=Ext.extend(Ext.tree.AsyncTreeNode,{layer:null,autoDisable:null,layerStore:null,constructor:function(a){a.leaf=a.leaf||!(a.children||a.loader),a.iconCls||a.children||(a.iconCls="gx-tree-layer-icon"),!a.loader||a.loader instanceof Ext.tree.TreeLoader||(a.loader=new GeoExt.tree.LayerParamLoader(a.loader)),this.defaultUI=this.defaultUI||GeoExt.tree.LayerNodeUI,Ext.apply(this,{layer:a.layer,layerStore:a.layerStore,autoDisable:a.autoDisable}),a.text&&(this.fixedText=!0),GeoExt.tree.LayerNode.superclass.constructor.apply(this,arguments)},render:function(a){var b=this.layer instanceof OpenLayers.Layer&&this.layer;if(!b){this.layerStore&&"auto"!=this.layerStore||(this.layerStore=GeoExt.MapPanel.guess().layers);var c=this.layerStore.findBy(function(a){return a.get("title")==this.layer},this);-1!=c&&(b=this.layerStore.getAt(c).getLayer())}if(!this.rendered||!b){var d=this.getUI();b?(this.layer=b,b.isBaseLayer&&(this.draggable=!1,Ext.applyIf(this.attributes,{checkedGroup:"gx_baselayer"})),this.autoDisable=!(this.autoDisable===!1||this.layer.isBaseLayer||this.layer.alwaysInRange),this.text||(this.text=b.name),d.show(),this.addVisibilityEventHandlers()):d.hide(),this.layerStore instanceof GeoExt.data.LayerStore&&this.addStoreEventHandlers(b)}GeoExt.tree.LayerNode.superclass.render.apply(this,arguments)},addVisibilityEventHandlers:function(){this.layer.events.on({visibilitychanged:this.onLayerVisibilityChanged,scope:this}),this.on({checkchange:this.onCheckChange,scope:this}),this.autoDisable&&this.layer.map.events.on({moveend:this.onMapMoveEnd,scope:this})},onLayerVisibilityChanged:function(){this._visibilityChanging||this.getUI().toggleCheck(this.layer.getVisibility())},onCheckChange:function(a,b){if(b!=this.layer.getVisibility()){this._visibilityChanging=!0;var c=this.layer;b&&c.isBaseLayer&&c.map?c.map.setBaseLayer(c):c.setVisibility(b),delete this._visibilityChanging}},onMapMoveEnd:function(a){this.autoDisable&&this.layer&&(this.layer.inRange===!1?this.disable():this.enable())},addStoreEventHandlers:function(){this.layerStore.on({add:this.onStoreAdd,remove:this.onStoreRemove,update:this.onStoreUpdate,scope:this})},onStoreAdd:function(a,b,c){for(var d,e=0;e<b.length;++e){if(d=b[e].getLayer(),this.layer==d){this.getUI().show();break}if(this.layer==d.name){this.render();break}}},onStoreRemove:function(a,b,c){this.layer==b.getLayer()&&this.getUI().hide()},onStoreUpdate:function(a,b,c){var d=b.getLayer();this.fixedText||this.layer!=d||this.text===d.name||this.setText(d.name)},destroy:function(){var a=this.layer;a instanceof OpenLayers.Layer&&a.events.un({visibilitychanged:this.onLayerVisibilityChanged,scope:this}),delete this.layer;var b=this.layerStore;b&&(b.un("add",this.onStoreAdd,this),b.un("remove",this.onStoreRemove,this),b.un("update",this.onStoreUpdate,this)),delete this.layerStore,this.un("checkchange",this.onCheckChange,this),GeoExt.tree.LayerNode.superclass.destroy.apply(this,arguments)}}),Ext.tree.TreePanel.nodeTypes.gx_layer=GeoExt.tree.LayerNode,Ext.namespace("GeoExt.tree"),GeoExt.tree.TreeNodeUIEventMixin=function(){return{constructor:function(a){a.addEvents("rendernode","rawclicknode"),this.superclass=arguments.callee.superclass,this.superclass.constructor.apply(this,arguments)},render:function(a){this.rendered||(this.superclass.render.apply(this,arguments),this.fireEvent("rendernode",this.node))},onClick:function(a){this.fireEvent("rawclicknode",this.node,a)!==!1&&this.superclass.onClick.apply(this,arguments)}}},Ext.namespace("GeoExt.plugins"),GeoExt.plugins.TreeNodeComponent=Ext.extend(Ext.util.Observable,{constructor:function(a){Ext.apply(this.initialConfig,Ext.apply({},a)),Ext.apply(this,a),GeoExt.plugins.TreeNodeComponent.superclass.constructor.apply(this,arguments)},init:function(a){a.on({rendernode:this.onRenderNode,beforedestroy:this.onBeforeDestroy,scope:this})},onRenderNode:function(a){var b=a.rendered,c=a.attributes,d=c.component||this.component;if(!b&&d){var e=Ext.DomHelper.append(a.ui.elNode,[{tag:"div"}]);"function"==typeof d?d=d(a,e):"object"==typeof d&&"function"==typeof d.fn&&(d=d.fn.apply(d.scope,[a,e])),"object"==typeof d&&"string"==typeof d.xtype&&(d=Ext.ComponentMgr.create(d)),d instanceof Ext.Component&&(d.render(e),a.component=d)}},onBeforeDestroy:function(a){a.un("rendernode",this.onRenderNode,this),a.un("beforedestroy",this.onBeforeDestroy,this)}}),Ext.preg("gx_treenodecomponent",GeoExt.plugins.TreeNodeComponent),Ext.namespace("GeoExt.plugins"),GeoExt.plugins.TreeNodeRadioButton=Ext.extend(Ext.util.Observable,{constructor:function(a){Ext.apply(this.initialConfig,Ext.apply({},a)),Ext.apply(this,a),this.addEvents("radiochange"),GeoExt.plugins.TreeNodeRadioButton.superclass.constructor.apply(this,arguments)},init:function(a){a.on({rendernode:this.onRenderNode,rawclicknode:this.onRawClickNode,beforedestroy:this.onBeforeDestroy,scope:this})},onRenderNode:function(a){var b=a.attributes;b.radioGroup&&!b.radio&&(b.radio=Ext.DomHelper.insertBefore(a.ui.anchor,['<input type="radio" class="gx-tree-radio" name="',b.radioGroup,'_radio"></input>'].join("")))},onRawClickNode:function(a,b){var c=b.getTarget(".gx-tree-radio",1);return c?(c.defaultChecked=c.checked,this.fireEvent("radiochange",a),!1):void 0},onBeforeDestroy:function(a){a.un("rendernode",this.onRenderNode,this),a.un("rawclicknode",this.onRawClickNode,this),a.un("beforedestroy",this.onBeforeDestroy,this)}}),Ext.preg("gx_treenoderadiobutton",GeoExt.plugins.TreeNodeRadioButton),Ext.namespace("GeoExt.plugins"),GeoExt.plugins.TreeNodeActions=Ext.extend(Ext.util.Observable,{actionsCls:"gx-tree-layer-actions",actionCls:"gx-tree-layer-action",constructor:function(a){Ext.apply(this.initialConfig,Ext.apply({},a)),Ext.apply(this,a),this.addEvents("action"),GeoExt.plugins.TreeNodeActions.superclass.constructor.apply(this,arguments)},init:function(a){a.on({rendernode:this.onRenderNode,rawclicknode:this.onRawClickNode,beforedestroy:this.onBeforeDestroy,scope:this})},onRenderNode:function(a){var b=a.rendered;if(!b){var c=a.attributes,d=c.actions||this.actions;if(d&&d.length>0){for(var e=['<div class="',this.actionsCls,'">'],f=0,g=d.length;g>f;f++){var h=d[f];e=e.concat(['<img id="'+a.id+"_"+h.action,'" ext:qtip="'+h.qtip,'" src="'+Ext.BLANK_IMAGE_URL,'" class="'+this.actionCls+" "+h.action+'" />'])}e.concat(["</div>"]),Ext.DomHelper.insertFirst(a.ui.elNode,e.join(""))}a.layer&&a.layer.map?this.updateActions(a):a.layerStore&&a.layerStore.on({bind:function(){this.updateActions(a)},scope:this})}},updateActions:function(a){var b=a.attributes.actions||this.actions||[];Ext.each(b,function(b,c){var d=Ext.get(a.id+"_"+b.action);d&&"function"==typeof b.update&&b.update.call(a,d)})},onRawClickNode:function(a,b){if(b.getTarget("."+this.actionCls,1)){var c=b.getTarget("."+this.actionCls,1),d=c.className.replace(this.actionCls+" ","");return this.fireEvent("action",a,d,b),!1}},onBeforeDestroy:function(a){a.un("rendernode",this.onRenderNode,this),a.un("rawclicknode",this.onRawClickNode,this),a.un("beforedestroy",this.onBeforeDestroy,this)}}),Ext.preg("gx_treenodeactions",GeoExt.plugins.TreeNodeActions),Ext.namespace("GeoExt.tree"),GeoExt.tree.LayerLoader=function(a){Ext.apply(this,a),this.addEvents("beforeload","load"),GeoExt.tree.LayerLoader.superclass.constructor.call(this)},Ext.extend(GeoExt.tree.LayerLoader,Ext.util.Observable,{store:null,filter:function(a){return 1==a.getLayer().displayInLayerSwitcher},baseAttrs:null,uiProviders:null,load:function(a,b){if(this.fireEvent("beforeload",this,a)){for(this.removeStoreHandlers();a.firstChild;)a.removeChild(a.firstChild);this.uiProviders||(this.uiProviders=a.getOwnerTree().getLoader().uiProviders),this.store||(this.store=GeoExt.MapPanel.guess().layers),this.store.each(function(b){this.addLayerNode(a,b)},this),this.addStoreHandlers(a),"function"==typeof b&&b(),this.fireEvent("load",this,a)}},onStoreAdd:function(a,b,c,d){if(!this._reordering)for(var e=d.recordIndexToNodeIndex(c+b.length-1),f=0;f<b.length;++f)this.addLayerNode(d,b[f],e)},onStoreRemove:function(a,b,c,d){this._reordering||this.removeLayerNode(d,b)},addLayerNode:function(a,b,c){if(this.filter(b)===!0){var d,e=this.createNode({nodeType:"gx_layer",layer:b.getLayer(),layerStore:this.store});d?a.insertBefore(e,d):a.appendChild(e),e.on("move",this.onChildMove,this)}},removeLayerNode:function(a,b){if(this.filter(b)===!0){var c=a.findChildBy(function(a){return a.layer==b.getLayer()});c&&(c.un("move",this.onChildMove,this),c.remove(),a.reload())}},onChildMove:function(a,b,c,d,e){this._reordering=!0;var f=this.store.getByLayer(b.layer);if(d instanceof GeoExt.tree.LayerContainer&&this.store===d.loader.store){d.loader._reordering=!0,this.store.remove(f);var g;if(d.childNodes.length>1){var h=0===e?e+1:e-1;g=this.store.findBy(function(a){return d.childNodes[h].layer===a.getLayer()}),0===e&&g++}else if(c.parentNode===d.parentNode){var i=d;do i=i.previousSibling;while(i&&!(i instanceof GeoExt.tree.LayerContainer&&i.lastChild));if(i)g=this.store.findBy(function(a){return i.lastChild.layer===a.getLayer()});else{var j=d;do j=j.nextSibling;while(j&&!(j instanceof GeoExt.tree.LayerContainer&&j.firstChild));j&&(g=this.store.findBy(function(a){return j.firstChild.layer===a.getLayer()})),g++}}void 0!==g?(this.store.insert(g,[f]),window.setTimeout(function(){d.reload(),c.reload()})):this.store.insert(oldRecordIndex,[f]),delete d.loader._reordering}delete this._reordering},addStoreHandlers:function(a){if(!this._storeHandlers){this._storeHandlers={add:this.onStoreAdd.createDelegate(this,[a],!0),remove:this.onStoreRemove.createDelegate(this,[a],!0)};for(var b in this._storeHandlers)this.store.on(b,this._storeHandlers[b],this)}},removeStoreHandlers:function(){if(this._storeHandlers){for(var a in this._storeHandlers)this.store.un(a,this._storeHandlers[a],this);delete this._storeHandlers}},createNode:function(attr){return this.baseAttrs&&Ext.apply(attr,this.baseAttrs),"string"==typeof attr.uiProvider&&(attr.uiProvider=this.uiProviders[attr.uiProvider]||eval(attr.uiProvider)),attr.nodeType=attr.nodeType||"gx_layer",new Ext.tree.TreePanel.nodeTypes[attr.nodeType](attr)},destroy:function(){this.removeStoreHandlers()}}),Ext.namespace("GeoExt.tree"),GeoExt.tree.LayerContainer=Ext.extend(Ext.tree.AsyncTreeNode,{text:"Layers",constructor:function(a){a=Ext.applyIf(a||{},{text:this.text}),this.loader=a.loader instanceof GeoExt.tree.LayerLoader?a.loader:new GeoExt.tree.LayerLoader(Ext.applyIf(a.loader||{},{store:a.layerStore})),GeoExt.tree.LayerContainer.superclass.constructor.call(this,a)},recordIndexToNodeIndex:function(a){for(var b=this.loader.store,c=b.getCount(),d=this.childNodes.length,e=-1,f=c-1;f>=0&&!(this.loader.filter(b.getAt(f))===!0&&(++e,a===f||e>d-1));--f);return e},destroy:function(){delete this.layerStore,GeoExt.tree.LayerContainer.superclass.destroy.apply(this,arguments)}}),Ext.tree.TreePanel.nodeTypes.gx_layercontainer=GeoExt.tree.LayerContainer,Ext.namespace("GeoExt.tree"),GeoExt.tree.BaseLayerContainer=Ext.extend(GeoExt.tree.LayerContainer,{text:"Base Layer",constructor:function(a){a=Ext.applyIf(a||{},{text:this.text,loader:{}}),a.loader=Ext.applyIf(a.loader,{baseAttrs:Ext.applyIf(a.loader.baseAttrs||{},{iconCls:"gx-tree-baselayer-icon",checkedGroup:"baselayer"}),filter:function(a){var b=a.getLayer();return b.displayInLayerSwitcher===!0&&b.isBaseLayer===!0}}),GeoExt.tree.BaseLayerContainer.superclass.constructor.call(this,a)}}),Ext.tree.TreePanel.nodeTypes.gx_baselayercontainer=GeoExt.tree.BaseLayerContainer,Ext.namespace("GeoExt.tree"),GeoExt.tree.OverlayLayerContainer=Ext.extend(GeoExt.tree.LayerContainer,{text:"Overlays",constructor:function(a){a=Ext.applyIf(a||{},{text:this.text}),a.loader=Ext.applyIf(a.loader||{},{filter:function(a){var b=a.getLayer();return b.displayInLayerSwitcher===!0&&b.isBaseLayer===!1}}),GeoExt.tree.OverlayLayerContainer.superclass.constructor.call(this,a)}}),Ext.tree.TreePanel.nodeTypes.gx_overlaylayercontainer=GeoExt.tree.OverlayLayerContainer,Ext.namespace("GeoExt.tree"),GeoExt.tree.LayerParamNode=Ext.extend(Ext.tree.TreeNode,{layer:null,param:null,item:null,delimiter:null,allItems:null,constructor:function(a){var b=a||{};b.iconCls=b.iconCls||"gx-tree-layerparam-icon",b.text=b.text||b.item,this.param=b.param,this.item=b.item,this.delimiter=b.delimiter||",",this.allItems=b.allItems,GeoExt.tree.LayerParamNode.superclass.constructor.apply(this,arguments),this.getLayer(),this.layer&&(this.allItems||(this.allItems=this.getItemsFromLayer()),null==this.attributes.checked?this.attributes.checked=this.layer.getVisibility()&&this.getItemsFromLayer().indexOf(this.item)>=0:this.onCheckChange(this,this.attributes.checked),this.layer.events.on({visibilitychanged:this.onLayerVisibilityChanged,scope:this}),this.on({checkchange:this.onCheckChange,scope:this}))},getLayer:function(){if(!this.layer){var a=this.attributes.layer;if("string"==typeof a){var b=this.attributes.layerStore||GeoExt.MapPanel.guess().layers,c=b.findBy(function(b){return b.get("title")==a});a=-1!=c?b.getAt(c).getLayer():null}this.layer=a}return this.layer},getItemsFromLayer:function(){var a=this.layer.params[this.param];return a instanceof Array?a:a?a.split(this.delimiter):[]},createParams:function(a){var b={};return b[this.param]=this.layer.params[this.param]instanceof Array?a:a.join(this.delimiter),b},onLayerVisibilityChanged:function(){0===this.getItemsFromLayer().length&&this.layer.mergeNewParams(this.createParams(this.allItems));var a=this.layer.getVisibility();a&&-1!==this.getItemsFromLayer().indexOf(this.item)&&this.getUI().toggleCheck(!0),a||(this.layer.mergeNewParams(this.createParams([])),this.getUI().toggleCheck(!1))},onCheckChange:function(a,b){var c=this.layer,d=[],e=this.getItemsFromLayer();b===!0&&c.getVisibility()===!1&&e.length===this.allItems.length&&(e=[]),Ext.each(this.allItems,function(a){(a!==this.item&&-1!==e.indexOf(a)||b===!0&&a===this.item)&&d.push(a)},this);var f=d.length>0;f&&c.mergeNewParams(this.createParams(d)),f!==c.getVisibility()&&c.setVisibility(f),!f&&c.mergeNewParams(this.createParams([]))},destroy:function(){var a=this.layer;a instanceof OpenLayers.Layer&&a.events.un({visibilitychanged:this.onLayerVisibilityChanged,scope:this}),delete this.layer,this.un("checkchange",this.onCheckChange,this),GeoExt.tree.LayerParamNode.superclass.destroy.apply(this,arguments)}}),Ext.tree.TreePanel.nodeTypes.gx_layerparam=GeoExt.tree.LayerParamNode,Ext.namespace("GeoExt.tree"),GeoExt.tree.LayerParamLoader=function(a){Ext.apply(this,a),this.addEvents("beforeload","load"),GeoExt.tree.LayerParamLoader.superclass.constructor.call(this)},Ext.extend(GeoExt.tree.LayerParamLoader,Ext.util.Observable,{param:null,delimiter:",",load:function(a,b){if(this.fireEvent("beforeload",this,a)){for(;a.firstChild;)a.removeChild(a.firstChild);var c=a.layer instanceof OpenLayers.Layer.HTTPRequest&&a.layer.params[this.param];if(c){var d=c instanceof Array?c.slice():c.split(this.delimiter);Ext.each(d,function(b,c,d){this.addParamNode(b,d,a)},this)}"function"==typeof b&&b(),this.fireEvent("load",this,a)}},addParamNode:function(a,b,c){var d=this.createNode({layer:c.layer,param:this.param,item:a,allItems:b,delimiter:this.delimiter}),e=c.item(0);e?c.insertBefore(d,e):c.appendChild(d)},createNode:function(attr){return this.baseAttrs&&Ext.apply(attr,this.baseAttrs),"string"==typeof attr.uiProvider&&(attr.uiProvider=this.uiProviders[attr.uiProvider]||eval(attr.uiProvider)),attr.nodeType=attr.nodeType||"gx_layerparam",new Ext.tree.TreePanel.nodeTypes[attr.nodeType](attr)}}),Ext.namespace("GeoExt.tree"),GeoExt.tree.WMSCapabilitiesLoader=function(a){Ext.apply(this,a),GeoExt.tree.WMSCapabilitiesLoader.superclass.constructor.call(this)},Ext.extend(GeoExt.tree.WMSCapabilitiesLoader,Ext.tree.TreeLoader,{url:null,layerOptions:null,layerParams:null,requestMethod:"GET",getParams:function(a){return{service:"WMS",request:"GetCapabilities"}},processResponse:function(a,b,c,d){var e=(new OpenLayers.Format.WMSCapabilities).read(a.responseXML||a.responseText);e.capability&&this.processLayer(e.capability,e.capability.request.getmap.href,b),"function"==typeof c&&c.apply(d||b,[b])},createWMSLayer:function(a,b){return a.name?new OpenLayers.Layer.WMS(a.title,b,OpenLayers.Util.extend({formats:a.formats[0],layers:a.name},this.layerParams),OpenLayers.Util.extend({minScale:a.minScale,queryable:a.queryable,maxScale:a.maxScale,metadata:a},this.layerOptions)):null},processLayer:function(a,b,c){Ext.each(a.nestedLayers,function(a){var d=this.createNode({text:a.title||a.name,nodeType:"node",layer:this.createWMSLayer(a,b),leaf:0===a.nestedLayers.length});d&&c.appendChild(d),a.nestedLayers&&this.processLayer(a,b,d)},this)}}),Ext.namespace("GeoExt"),GeoExt.LayerOpacitySlider=Ext.extend(Ext.slider.SingleSlider,{layer:null,complementaryLayer:null,delay:5,changeVisibilityDelay:5,aggressive:!1,changeVisibility:!1,value:null,inverse:!1,constructor:function(a){a.layer&&(this.layer=this.getLayer(a.layer),this.bind(),this.complementaryLayer=this.getLayer(a.complementaryLayer),
void 0!==a.inverse&&(this.inverse=a.inverse),a.value=void 0!==a.value?a.value:this.getOpacityValue(this.layer),delete a.layer,delete a.complementaryLayer),GeoExt.LayerOpacitySlider.superclass.constructor.call(this,a)},bind:function(){this.layer&&this.layer.map&&this.layer.map.events.on({changelayer:this.update,scope:this})},unbind:function(){this.layer&&this.layer.map&&this.layer.map.events&&this.layer.map.events.un({changelayer:this.update,scope:this})},update:function(a){"opacity"!==a.property||a.layer!=this.layer||this._settingOpacity||this.setValue(this.getOpacityValue(this.layer))},setLayer:function(a){this.unbind(),this.layer=this.getLayer(a),this.setValue(this.getOpacityValue(a)),this.bind()},getOpacityValue:function(a){var b;return b=a&&null!==a.opacity?parseInt(a.opacity*(this.maxValue-this.minValue)):this.maxValue,this.inverse===!0&&(b=this.maxValue-this.minValue-b),b},getLayer:function(a){return a instanceof OpenLayers.Layer?a:a instanceof GeoExt.data.LayerRecord?a.getLayer():void 0},initComponent:function(){GeoExt.LayerOpacitySlider.superclass.initComponent.call(this),this.changeVisibility&&this.layer&&(0==this.layer.opacity||this.inverse===!1&&this.value==this.minValue||this.inverse===!0&&this.value==this.maxValue)&&this.layer.setVisibility(!1),this.complementaryLayer&&(this.layer&&1==this.layer.opacity||this.inverse===!1&&this.value==this.maxValue||this.inverse===!0&&this.value==this.minValue)&&this.complementaryLayer.setVisibility(!1),this.aggressive===!0?this.on("change",this.changeLayerOpacity,this,{buffer:this.delay}):this.on("changecomplete",this.changeLayerOpacity,this),this.changeVisibility===!0&&this.on("change",this.changeLayerVisibility,this,{buffer:this.changeVisibilityDelay}),this.complementaryLayer&&this.on("change",this.changeComplementaryLayerVisibility,this,{buffer:this.changeVisibilityDelay}),this.on("beforedestroy",this.unbind,this)},changeLayerOpacity:function(a,b){this.layer&&(b/=this.maxValue-this.minValue,this.inverse===!0&&(b=1-b),this._settingOpacity=!0,this.layer.setOpacity(b),delete this._settingOpacity)},changeLayerVisibility:function(a,b){var c=this.layer.getVisibility();this.inverse===!1&&b==this.minValue||this.inverse===!0&&b==this.maxValue&&c===!0?this.layer.setVisibility(!1):(this.inverse===!1&&b>this.minValue||this.inverse===!0&&b<this.maxValue&&0==c)&&this.layer.setVisibility(!0)},changeComplementaryLayerVisibility:function(a,b){var c=this.complementaryLayer.getVisibility();this.inverse===!1&&b==this.maxValue||this.inverse===!0&&b==this.minValue&&c===!0?this.complementaryLayer.setVisibility(!1):(this.inverse===!1&&b<this.maxValue||this.inverse===!0&&b>this.minValue&&0==c)&&this.complementaryLayer.setVisibility(!0)},addToMapPanel:function(a){this.on({render:function(){var b=this.getEl();b.setStyle({position:"absolute",zIndex:a.map.Z_INDEX_BASE.Control}),b.on({mousedown:this.stopMouseEvents,click:this.stopMouseEvents})},scope:this})},removeFromMapPanel:function(a){var b=this.getEl();b.un({mousedown:this.stopMouseEvents,click:this.stopMouseEvents,scope:this}),this.unbind()},stopMouseEvents:function(a){a.stopEvent()}}),Ext.reg("gx_opacityslider",GeoExt.LayerOpacitySlider),Ext.namespace("GeoExt"),GeoExt.LayerLegend=Ext.extend(Ext.Container,{layerRecord:null,showTitle:!0,legendTitle:null,labelCls:null,layerStore:null,initComponent:function(){GeoExt.LayerLegend.superclass.initComponent.call(this),this.autoEl={},this.add({xtype:"label",html:this.getLayerTitle(this.layerRecord),cls:"x-form-item x-form-item-label"+(this.labelCls?" "+this.labelCls:"")}),this.layerRecord&&this.layerRecord.store&&(this.layerStore=this.layerRecord.store,this.layerStore.on("update",this.onStoreUpdate,this),this.layerStore.on("add",this.onStoreAdd,this),this.layerStore.on("remove",this.onStoreRemove,this))},getLabel:function(){var a=this.items.get(0);return a.rendered?a.el.dom.innerHTML:a.html},onStoreRemove:function(a,b,c){},onStoreAdd:function(a,b,c){},onStoreUpdate:function(a,b,c){if(b===this.layerRecord&&this.items.getCount()>0){var d=b.getLayer();this.setVisible(d.getVisibility()&&d.calculateInRange()&&d.displayInLayerSwitcher&&!b.get("hideInLegend")),this.update()}},update:function(){var a=this.getLayerTitle(this.layerRecord),b=this.items.get(0);b instanceof Ext.form.Label&&this.getLabel()!==a&&b.setText(a,!1)},getLayerTitle:function(a){var b=this.legendTitle||"";return this.showTitle&&!b&&a&&!a.get("hideTitle")&&(b=a.get("title")||a.get("name")||a.getLayer().name||""),b},beforeDestroy:function(){this.layerStore&&(this.layerStore.un("update",this.onStoreUpdate,this),this.layerStore.un("remove",this.onStoreRemove,this),this.layerStore.un("add",this.onStoreAdd,this)),GeoExt.LayerLegend.superclass.beforeDestroy.apply(this,arguments)},onDestroy:function(){this.layerRecord=null,this.layerStore=null,GeoExt.LayerLegend.superclass.onDestroy.apply(this,arguments)}}),GeoExt.LayerLegend.getTypes=function(a,b){var c,d,e=(b||[]).concat(),f=[];for(d in GeoExt.LayerLegend.types)c=GeoExt.LayerLegend.types[d].supports(a),c>0?-1==e.indexOf(d)&&f.push({type:d,score:c}):e.remove(d);f.sort(function(a,b){return a.score<b.score?1:a.score==b.score?0:-1});for(var g=f.length,h=new Array(g),i=0;g>i;++i)h[i]=f[i].type;return e.concat(h)},GeoExt.LayerLegend.supports=function(a){},GeoExt.LayerLegend.types={},Ext.namespace("GeoExt"),GeoExt.LegendImage=Ext.extend(Ext.BoxComponent,{url:null,defaultImgSrc:null,imgCls:null,initComponent:function(){GeoExt.LegendImage.superclass.initComponent.call(this),null===this.defaultImgSrc&&(this.defaultImgSrc=Ext.BLANK_IMAGE_URL),this.autoEl={tag:"img","class":this.imgCls?this.imgCls:"",src:this.defaultImgSrc}},setUrl:function(a){this.url=a;var b=this.getEl();b&&(b.un("error",this.onImageLoadError,this),b.on("error",this.onImageLoadError,this,{single:!0}),b.dom.src=a)},onRender:function(a,b){GeoExt.LegendImage.superclass.onRender.call(this,a,b),this.url&&this.setUrl(this.url)},onDestroy:function(){var a=this.getEl();a&&a.un("error",this.onImageLoadError,this),GeoExt.LegendImage.superclass.onDestroy.apply(this,arguments)},onImageLoadError:function(){this.getEl().dom.src=this.defaultImgSrc}}),Ext.reg("gx_legendimage",GeoExt.LegendImage),Ext.namespace("GeoExt"),GeoExt.UrlLegend=Ext.extend(GeoExt.LayerLegend,{initComponent:function(){GeoExt.UrlLegend.superclass.initComponent.call(this),this.add(new GeoExt.LegendImage({url:this.layerRecord.get("legendURL")}))},update:function(){GeoExt.UrlLegend.superclass.update.apply(this,arguments),this.items.get(1).setUrl(this.layerRecord.get("legendURL"))}}),GeoExt.UrlLegend.supports=function(a){return null==a.get("legendURL")?0:10},GeoExt.LayerLegend.types.gx_urllegend=GeoExt.UrlLegend,Ext.reg("gx_urllegend",GeoExt.UrlLegend),Ext.namespace("GeoExt"),GeoExt.WMSLegend=Ext.extend(GeoExt.LayerLegend,{defaultStyleIsFirst:!0,useScaleParameter:!0,baseParams:null,initComponent:function(){GeoExt.WMSLegend.superclass.initComponent.call(this);var a=this.layerRecord.getLayer();this._noMap=!a.map,a.events.register("moveend",this,this.onLayerMoveend),this.update()},onLayerMoveend:function(a){(a.zoomChanged===!0&&this.useScaleParameter===!0||this._noMap)&&(delete this._noMap,this.update())},getLegendUrl:function(a,b){var c,d=this.layerRecord,e=d&&d.get("styles"),f=d.getLayer();b=b||[f.params.LAYERS].join(",").split(",");var g=f.params.STYLES&&[f.params.STYLES].join(",").split(","),h=b.indexOf(a),i=g&&g[h];if(e&&e.length>0&&(i?Ext.each(e,function(a){return c=a.name==i&&a.legend&&a.legend.href,!c}):this.defaultStyleIsFirst!==!0||g||f.params.SLD||f.params.SLD_BODY||(c=e[0].legend&&e[0].legend.href)),c||(c=f.getFullRequestString({REQUEST:"GetLegendGraphic",WIDTH:null,HEIGHT:null,EXCEPTIONS:"application/vnd.ogc.se_xml",LAYER:a,LAYERS:null,STYLE:""!==i?i:null,STYLES:null,SRS:null,FORMAT:null,TIME:null})),f.options.opacity&&1!==f.options.opacity){var j="map.layer["+a+"]",k=j+"=OPACITY+"+100*f.options.opacity;c=Ext.urlAppend(c,k)}if(-1!=c.toLowerCase().indexOf("request=getlegendgraphic")&&(-1==c.toLowerCase().indexOf("format=")&&(c=Ext.urlAppend(c,"FORMAT=image/png")),this.useScaleParameter===!0)){var l=f.map.getScale();c=Ext.urlAppend(c,"SCALE="+l)}var m=Ext.apply({},this.baseParams);return f.params._OLSALT&&(m._OLSALT=f.params._OLSALT),c=Ext.urlAppend(c,Ext.urlEncode(m))},update:function(){var a=this.layerRecord.getLayer();if(a&&a.map){GeoExt.WMSLegend.superclass.update.apply(this,arguments);var b,c,d,e;b=[a.params.LAYERS].join(",").split(",");var f=[],g=this.items.get(0);for(this.items.each(function(a){if(d=b.indexOf(a.itemId),0>d&&a!=g)f.push(a);else if(a!==g){c=b[d];var e=this.getLegendUrl(c,b);OpenLayers.Util.isEquivalentUrl(e,a.url)||a.setUrl(e)}},this),d=0,e=f.length;e>d;d++){var h=f[d];this.remove(h),h.destroy()}for(d=0,e=b.length;e>d;d++)c=b[d],this.items&&this.getComponent(c)||this.add({xtype:"gx_legendimage",url:this.getLegendUrl(c,b),itemId:c});this.doLayout()}},beforeDestroy:function(){if(this.useScaleParameter===!0){var a=this.layerRecord.getLayer();a&&a.events&&a.events.unregister("moveend",this,this.onLayerMoveend)}GeoExt.WMSLegend.superclass.beforeDestroy.apply(this,arguments)}}),GeoExt.WMSLegend.supports=function(a){return a.getLayer()instanceof OpenLayers.Layer.WMS?1:0},GeoExt.LayerLegend.types.gx_wmslegend=GeoExt.WMSLegend,Ext.reg("gx_wmslegend",GeoExt.WMSLegend),Ext.namespace("GeoExt"),GeoExt.VectorLegend=Ext.extend(GeoExt.LayerLegend,{layerRecord:null,layer:null,rules:null,symbolType:null,untitledPrefix:"Untitled ",clickableSymbol:!1,clickableTitle:!1,selectOnClick:!1,enableDD:!1,bodyBorder:!1,feature:null,selectedRule:null,currentScaleDenominator:null,initComponent:function(){if(GeoExt.VectorLegend.superclass.initComponent.call(this),this.layerRecord&&(this.layer=this.layerRecord.getLayer(),this.layer.arborescence=this,this.layer.map&&(this.map=this.layer.map,this.currentScaleDenominator=this.layer.map.getScale(),this.layer.map.events.on({zoomend:this.onMapZoom,scope:this}))),!this.symbolType)if(this.feature)this.symbolType=this.symbolTypeFromFeature(this.feature);else if(this.layer)if(this.layer.features.length>0){var a=this.layer.features[0].clone();a.attributes={},this.feature=a,this.symbolType=this.symbolTypeFromFeature(this.feature)}else this.layer.events.on({featuresadded:this.onFeaturesAdded,scope:this});this.layer&&this.feature&&!this.rules&&this.setRules(),this.rulesContainer=new Ext.Container({autoEl:{}}),this.add(this.rulesContainer),this.addEvents("titleclick","symbolclick","ruleclick","ruleselected","ruleunselected","rulemoved"),this.update()},onMapZoom:function(){this.setCurrentScaleDenominator(this.layer.map.getScale())},symbolTypeFromFeature:function(a){var b=a.geometry.CLASS_NAME.match(/Point|Line|Polygon/);return b&&b[0]||"Point"},onFeaturesAdded:function(){this.layer.events.un({featuresadded:this.onFeaturesAdded,scope:this});var a=this.layer.features[0].clone();a.attributes={},this.feature=a,this.symbolType=this.symbolTypeFromFeature(this.feature),this.rules||this.setRules(),this.update()},setRules:function(){if(this.feature){var a=this.layer.styleMap&&this.layer.styleMap.styles["default"];a||(a=new OpenLayers.Style),0===a.rules.length?this.rules=[new OpenLayers.Rule({title:a.title,symbolizer:a.createSymbolizer(this.feature)})]:this.rules=a.rules}},setCurrentScaleDenominator:function(a){a!==this.currentScaleDenominator&&(this.currentScaleDenominator=a,this.update())},getRuleEntry:function(a){return this.rulesContainer.items.get(this.rules.indexOf(a))},addRuleEntry:function(a,b){this.rulesContainer.add(this.createRuleEntry(a)),b||this.doLayout()},removeRuleEntry:function(a,b){var c=this.getRuleEntry(a);c&&(this.rulesContainer.remove(c),b||this.doLayout())},selectRuleEntry:function(a){var b=a!=this.selectedRule;if(this.selectedRule&&this.unselect(),b){var c=this.getRuleEntry(a);c.body.addClass("x-grid3-row-selected"),this.selectedRule=a,this.fireEvent("ruleselected",this,a)}},unselect:function(){this.rulesContainer.items.each(function(a,b){this.rules[b]==this.selectedRule&&(a.body.removeClass("x-grid3-row-selected"),this.selectedRule=null,this.fireEvent("ruleunselected",this,this.rules[b]))},this)},createRuleEntry:function(a){var b=!0;return null!=this.currentScaleDenominator&&(a.minScaleDenominator&&(b=b&&this.currentScaleDenominator>=a.minScaleDenominator),a.maxScaleDenominator&&(b=b&&this.currentScaleDenominator<a.maxScaleDenominator)),{xtype:"panel",layout:"column",border:!1,hidden:!b,bodyStyle:this.selectOnClick?{cursor:"pointer"}:void 0,defaults:{border:!1},items:[this.createRuleRenderer(a),this.createRuleTitle(a)],listeners:{render:function(b){this.selectOnClick&&b.getEl().on({click:function(b){this.selectRuleEntry(a)},scope:this}),1==this.enableDD&&this.addDD(b)},scope:this}}},createRuleRenderer:function(a){var b,c,d=[this.symbolType,"Point","Line","Polygon"],e=a.symbolizers;if(e){var f;a:for(var g=0,h=d.length;h>g;++g)if(b=d[g],f=OpenLayers.Symbolizer[b])for(var i=0,j=e.length;j>i;++i)if(e[i]instanceof f){c=!0;break a}}else{for(var k=a.symbolizer,g=0,l=d.length;l>g;++g)if(b=d[g],k[b]){k=k[b],c=!0;break}e=[k]}return{xtype:"gx_renderer",symbolType:c?b:this.symbolType,symbolizers:e,style:this.clickableSymbol?{cursor:"pointer"}:void 0,listeners:{click:function(){this.clickableSymbol&&(this.fireEvent("symbolclick",this,a),this.fireEvent("ruleclick",this,a))},scope:this}}},createRuleTitle:function(a){return{cls:"x-form-item",style:"padding: 0.2em 0.5em 0;",bodyStyle:Ext.applyIf({background:"transparent"},this.clickableTitle?{cursor:"pointer"}:void 0),html:this.getRuleTitle(a),listeners:{render:function(b){this.clickableTitle&&b.getEl().on({click:function(){this.fireEvent("titleclick",this,a),this.fireEvent("ruleclick",this,a)},scope:this})},scope:this}}},addDD:function(a){var b=a.ownerCt,c=this;new Ext.dd.DragSource(a.getEl(),{ddGroup:b.id,onDragOut:function(a,b){var c=Ext.getCmp(b);return c.removeClass("gx-ruledrag-insert-above"),c.removeClass("gx-ruledrag-insert-below"),Ext.dd.DragZone.prototype.onDragOut.apply(this,arguments)},onDragEnter:function(c,d){var e,f=Ext.getCmp(d),g=b.items.indexOf(a),h=b.items.indexOf(f);return g>h?e="gx-ruledrag-insert-above":h>g&&(e="gx-ruledrag-insert-below"),e&&f.addClass(e),Ext.dd.DragZone.prototype.onDragEnter.apply(this,arguments)},onDragDrop:function(d,e){return c.moveRule(b.items.indexOf(a),b.items.indexOf(Ext.getCmp(e))),Ext.dd.DragZone.prototype.onDragDrop.apply(this,arguments)},getDragData:function(a){var b=a.getTarget(".x-column-inner");if(b){var c=b.cloneNode(!0);return c.id=Ext.id(),{sourceEl:b,repairXY:Ext.fly(b).getXY(),ddel:c}}}}),new Ext.dd.DropTarget(a.getEl(),{ddGroup:b.id,notifyDrop:function(){return!0}})},update:function(){if(GeoExt.VectorLegend.superclass.update.apply(this,arguments),this.symbolType&&this.rules){if(this.rulesContainer.items)for(var a,b=this.rulesContainer.items.length-1;b>=0;--b)a=this.rulesContainer.getComponent(b),this.rulesContainer.remove(a,!0);for(var b=0,c=this.rules.length;c>b;++b)this.rules[b].symbolizer.label=void 0,this.addRuleEntry(this.rules[b],!0);this.doLayout(),this.selectedRule&&this.getRuleEntry(this.selectedRule).body.addClass("x-grid3-row-selected")}},updateRuleEntry:function(a){var b=this.getRuleEntry(a);b&&(b.removeAll(),b.add(this.createRuleRenderer(a)),b.add(this.createRuleTitle(a)),b.doLayout())},moveRule:function(a,b){var c=this.rules[a];this.rules.splice(a,1),this.rules.splice(b,0,c),this.update(),this.fireEvent("rulemoved",this,c)},getRuleTitle:function(a){var b=a.title||a.name||"";return!b&&this.untitledPrefix&&(b=this.untitledPrefix+(this.rules.indexOf(a)+1)),b},beforeDestroy:function(){this.layer&&(this.layer.events&&this.layer.events.un({featuresadded:this.onFeaturesAdded,scope:this}),this.layer.map&&this.layer.map.events&&this.layer.map.events.un({zoomend:this.onMapZoom,scope:this})),delete this.layer,delete this.map,delete this.rules,GeoExt.VectorLegend.superclass.beforeDestroy.apply(this,arguments)},onStoreRemove:function(a,b,c){b.getLayer()===this.layer&&this.map&&this.map.events&&this.map.events.un({zoomend:this.onMapZoom,scope:this})},onStoreAdd:function(a,b,c){for(var d=0,e=b.length;e>d;d++){var f=b[d];f.getLayer()===this.layer&&this.layer.map&&this.layer.map.events&&this.layer.map.events.on({zoomend:this.onMapZoom,scope:this})}}}),GeoExt.VectorLegend.supports=function(a){return a.getLayer()instanceof OpenLayers.Layer.Vector?1:0},GeoExt.LayerLegend.types.gx_vectorlegend=GeoExt.VectorLegend,Ext.reg("gx_vectorlegend",GeoExt.VectorLegend),Ext.namespace("GeoExt"),GeoExt.LegendPanel=Ext.extend(Ext.Panel,{dynamic:!0,layerStore:null,preferredTypes:null,filter:function(a){return!0},initComponent:function(){GeoExt.LegendPanel.superclass.initComponent.call(this)},onRender:function(){GeoExt.LegendPanel.superclass.onRender.apply(this,arguments),this.layerStore||(this.layerStore=GeoExt.MapPanel.guess().layers),this.layerStore.each(function(a){this.addLegend(a)},this),this.dynamic&&this.layerStore.on({add:this.onStoreAdd,remove:this.onStoreRemove,clear:this.onStoreClear,scope:this})},recordIndexToPanelIndex:function(a){for(var b,c,d=this.layerStore,e=d.getCount(),f=-1,g=this.items?this.items.length:0,h=e-1;h>=0;--h){b=d.getAt(h),c=b.getLayer();var i=GeoExt.LayerLegend.getTypes(b);if(c.displayInLayerSwitcher&&i.length>0&&d.getAt(h).get("hideInLegend")!==!0&&(++f,a===h||f>g-1))break}return f},getIdForLayer:function(a){return this.id+"-"+a.id},onStoreAdd:function(a,b,c){for(var d=this.recordIndexToPanelIndex(c+b.length-1),e=0,f=b.length;f>e;e++)this.addLegend(b[e],d);this.doLayout()},onStoreRemove:function(a,b,c){this.removeLegend(b)},removeLegend:function(a){if(this.items){var b=this.getComponent(this.getIdForLayer(a.getLayer()));b&&(this.remove(b,!0),this.doLayout())}},onStoreClear:function(a){this.removeAllLegends()},removeAllLegends:function(){this.removeAll(!0),this.doLayout()},addLegend:function(a,b){if(this.filter(a)===!0){var c=a.getLayer();b=b||0;var d=GeoExt.LayerLegend.getTypes(a,this.preferredTypes);c.displayInLayerSwitcher&&!a.get("hideInLegend")&&d.length>0&&this.insert(b,{xtype:d[0],id:this.getIdForLayer(c),layerRecord:a,hidden:!(!c.map&&c.visibility||c.getVisibility()&&c.calculateInRange())})}},onDestroy:function(){this.layerStore&&(this.layerStore.un("add",this.onStoreAdd,this),this.layerStore.un("remove",this.onStoreRemove,this),this.layerStore.un("clear",this.onStoreClear,this)),GeoExt.LegendPanel.superclass.onDestroy.apply(this,arguments)}}),Ext.reg("gx_legendpanel",GeoExt.LegendPanel),Ext.namespace("GeoExt"),GeoExt.ZoomSlider=Ext.extend(Ext.slider.SingleSlider,{map:null,baseCls:"gx-zoomslider",aggressive:!1,updating:!1,initComponent:function(){GeoExt.ZoomSlider.superclass.initComponent.call(this),this.map&&(this.map instanceof GeoExt.MapPanel&&(this.map=this.map.map),this.bind(this.map)),this.aggressive===!0?this.on("change",this.changeHandler,this):this.on("changecomplete",this.changeHandler,this),this.on("beforedestroy",this.unbind,this)},onRender:function(){GeoExt.ZoomSlider.superclass.onRender.apply(this,arguments),this.el.addClass(this.baseCls)},afterRender:function(){Ext.slider.SingleSlider.superclass.afterRender.apply(this,arguments),this.update()},addToMapPanel:function(a){this.on({render:function(){var b=this.getEl();b.setStyle({position:"absolute",zIndex:a.map.Z_INDEX_BASE.Control}),b.on({mousedown:this.stopMouseEvents,click:this.stopMouseEvents})},afterrender:function(){this.bind(a.map)},scope:this})},stopMouseEvents:function(a){a.stopEvent()},removeFromMapPanel:function(a){var b=this.getEl();b.un("mousedown",this.stopMouseEvents,this),b.un("click",this.stopMouseEvents,this),this.unbind()},bind:function(a){this.map=a,this.map.events.on({zoomend:this.update,changebaselayer:this.initZoomValues,scope:this}),this.map.baseLayer&&(this.initZoomValues(),this.update())},unbind:function(){this.map&&this.map.events&&this.map.events.un({zoomend:this.update,changebaselayer:this.initZoomValues,scope:this})},initZoomValues:function(){var a=this.map.baseLayer;void 0===this.initialConfig.minValue&&(this.minValue=a.minZoomLevel||0),void 0===this.initialConfig.maxValue&&(this.maxValue=null==a.minZoomLevel?a.numZoomLevels-1:a.maxZoomLevel)},getZoom:function(){return this.getValue()},getScale:function(){return OpenLayers.Util.getScaleFromResolution(this.map.getResolutionForZoom(this.getValue()),this.map.getUnits())},getResolution:function(){return this.map.getResolutionForZoom(this.getValue())},changeHandler:function(){this.map&&!this.updating&&this.map.zoomTo(this.getValue())},update:function(){this.rendered&&this.map&&(this.updating=!0,this.setValue(this.map.getZoom()),this.updating=!1)}}),Ext.reg("gx_zoomslider",GeoExt.ZoomSlider),Ext.namespace("GeoExt.grid"),GeoExt.grid.FeatureSelectionModelMixin=function(){return{autoActivateControl:!0,layerFromStore:!0,selectControl:null,bound:!1,superclass:null,selectedFeatures:[],autoPanMapOnSelection:!1,constructor:function(a){if(a=a||{},a.selectControl instanceof OpenLayers.Control.SelectFeature){if(!a.singleSelect){var b=a.selectControl;a.singleSelect=!(b.multiple||b.multipleKey)}}else a.layer instanceof OpenLayers.Layer.Vector&&(this.selectControl=this.createSelectControl(a.layer,a.selectControl),delete a.layer,delete a.selectControl);a.autoPanMapOnSelection&&(this.autoPanMapOnSelection=!0,delete a.autoPanMapOnSelection),this.superclass=arguments.callee.superclass,this.superclass.constructor.call(this,a)},initEvents:function(){if(this.superclass.initEvents.call(this),this.layerFromStore){var a=this.grid.getStore()&&this.grid.getStore().layer;!a||this.selectControl instanceof OpenLayers.Control.SelectFeature||(this.selectControl=this.createSelectControl(a,this.selectControl))}this.selectControl&&this.bind(this.selectControl)},createSelectControl:function(a,b){b=b||{};var c=void 0!==b.singleSelect?b.singleSelect:this.singleSelect;b=OpenLayers.Util.extend({toggle:!0,multipleKey:c?null:Ext.isMac?"metaKey":"ctrlKey"},b);var d=new OpenLayers.Control.SelectFeature(a,b);return a.map.addControl(d),d},bind:function(a,b){if(!this.bound){b=b||{},this.selectControl=a,a instanceof OpenLayers.Layer.Vector&&(this.selectControl=this.createSelectControl(a,b.controlConfig)),this.autoActivateControl&&this.selectControl.activate();for(var c=this.getLayers(),d=0,e=c.length;e>d;d++)c[d].events.on({featureselected:this.featureSelected,featureunselected:this.featureUnselected,scope:this});this.on("rowselect",this.rowSelected,this),this.on("rowdeselect",this.rowDeselected,this),this.bound=!0}return this.selectControl},unbind:function(){var a=this.selectControl;if(this.bound){for(var b=this.getLayers(),c=0,d=b.length;d>c;c++)b[c].events.un({featureselected:this.featureSelected,featureunselected:this.featureUnselected,scope:this});this.un("rowselect",this.rowSelected,this),this.un("rowdeselect",this.rowDeselected,this),this.autoActivateControl&&a.deactivate(),this.selectControl=null,this.bound=!1}return a},featureSelected:function(a){if(!this._selecting){var b=this.grid.store,c=b.findBy(function(b,c){return b.getFeature()==a.feature});-1==c||this.isSelected(c)||(this._selecting=!0,this.selectRow(c,!this.singleSelect),this._selecting=!1,this.grid.getView().focusRow(c))}},featureUnselected:function(a){if(!this._selecting){var b=this.grid.store,c=b.findBy(function(b,c){return b.getFeature()==a.feature});-1!=c&&this.isSelected(c)&&(this._selecting=!0,this.deselectRow(c),this._selecting=!1,this.grid.getView().focusRow(c))}},rowSelected:function(a,b,c){var d=c.getFeature();if(!this._selecting&&d){for(var e=this.getLayers(),f=0,g=e.length;g>f;f++)if(-1==e[f].selectedFeatures.indexOf(d)){this._selecting=!0,this.selectControl.select(d),this._selecting=!1,this.selectedFeatures.push(d);break}this.autoPanMapOnSelection&&this.recenterToSelectionExtent()}},rowDeselected:function(a,b,c){var d=c.getFeature();if(!this._selecting&&d){for(var e=this.getLayers(),f=0,g=e.length;g>f;f++)if(-1!=e[f].selectedFeatures.indexOf(d)){this._selecting=!0,this.selectControl.unselect(d),this._selecting=!1,OpenLayers.Util.removeItem(this.selectedFeatures,d);break}this.autoPanMapOnSelection&&this.selectedFeatures.length>0&&this.recenterToSelectionExtent()}},getLayers:function(){return this.selectControl.layers||[this.selectControl.layer]},recenterToSelectionExtent:function(){var a=this.selectControl.map,b=this.getSelectionExtent(),c=a.getZoomForExtent(b,!1);c>a.getZoom()?a.setCenter(b.getCenterLonLat()):a.zoomToExtent(b)},getSelectionExtent:function(){var a=null,b=this.selectedFeatures;if(b&&b.length>0)for(var c=null,d=0,e=b.length;e>d;d++)c=b[d].geometry,c&&(null===a&&(a=new OpenLayers.Bounds),a.extend(c.getBounds()));return a}}},GeoExt.grid.FeatureSelectionModel=Ext.extend(Ext.grid.RowSelectionModel,new GeoExt.grid.FeatureSelectionModelMixin),Ext.namespace("GeoExt.data"),GeoExt.data.PrintPage=Ext.extend(Ext.util.Observable,{printProvider:null,feature:null,center:null,scale:null,rotation:0,customParams:null,constructor:function(a){this.initialConfig=a,Ext.apply(this,a),this.customParams||(this.customParams={}),this.addEvents("change"),GeoExt.data.PrintPage.superclass.constructor.apply(this,arguments),this.feature=new OpenLayers.Feature.Vector(OpenLayers.Geometry.fromWKT("POLYGON((-1 -1,1 -1,1 1,-1 1,-1 -1))")),this.printProvider.capabilities?this.setScale(this.printProvider.scales.getAt(0)):this.printProvider.on({loadcapabilities:function(){this.setScale(this.printProvider.scales.getAt(0))},scope:this,single:!0}),this.printProvider.on({layoutchange:this.onLayoutChange,scope:this})},getPrintExtent:function(a){return a=a instanceof GeoExt.MapPanel?a.map:a,this.calculatePageBounds(this.scale,a.getUnits())},setScale:function(a,b){var c=this.calculatePageBounds(a,b),d=c.toGeometry(),e=this.rotation;0!=e&&d.rotate(-e,d.getCentroid()),this.updateFeature(d,{scale:a})},setCenter:function(a){var b=this.feature.geometry,c=b.getBounds().getCenterLonLat(),d=a.lon-c.lon,e=a.lat-c.lat;b.move(d,e),this.updateFeature(b,{center:a})},setRotation:function(a,b){if(b||this.printProvider.layout.get("rotation")===!0){var c=this.feature.geometry;c.rotate(this.rotation-a,c.getCentroid()),this.updateFeature(c,{rotation:a})}},fit:function(a,b){b=b||{};var c,d=a;if(a instanceof GeoExt.MapPanel?d=a.map:a instanceof OpenLayers.Feature.Vector&&(d=a.layer.map,c=a.geometry.getBounds()),c||(c=d.getExtent())){this._updating=!0;var e=c.getCenterLonLat();this.setCenter(e);var f=d.getUnits(),g=this.printProvider.scales.getAt(0),h=Number.POSITIVE_INFINITY,i=c.getWidth(),j=c.getHeight();this.printProvider.scales.each(function(a){var d=this.calculatePageBounds(a,f);if("closest"!=b.mode){var e="screen"==b.mode?!c.containsBounds(d):d.containsBounds(c);return(e||"screen"==b.mode&&!e)&&(g=a),e}var k=Math.abs(d.getWidth()-i)+Math.abs(d.getHeight()-j);h>k&&(h=k,g=a)},this),this.setScale(g,f),delete this._updating,this.updateFeature(this.feature.geometry,{center:e,scale:g})}},updateFeature:function(a,b){var c=this.feature,d=c.geometry!==a;if(a.id=c.geometry.id,c.geometry=a,!this._updating){for(var e in b)b[e]===this[e]?delete b[e]:(this[e]=b[e],d=!0);Ext.apply(this,b),c.layer&&c.layer.drawFeature(c),d&&this.fireEvent("change",this,b)}},calculatePageBounds:function(a,b){var c=a.get("value"),d=this.feature,e=this.feature.geometry,f=e.getBounds().getCenterLonLat(),g=this.printProvider.layout.get("size"),b=b||d.layer&&d.layer.map&&d.layer.map.getUnits()||"dd",h=OpenLayers.INCHES_PER_UNIT[b],i=g.width/72/h*c/2,j=g.height/72/h*c/2;return new OpenLayers.Bounds(f.lon-i,f.lat-j,f.lon+i,f.lat+j)},onLayoutChange:function(){this.printProvider.layout.get("rotation")===!1&&this.setRotation(0,!0),this.scale&&this.setScale(this.scale)},destroy:function(){this.printProvider.un("layoutchange",this.onLayoutChange,this)}}),Ext.namespace("GeoExt.data"),GeoExt.data.PrintProvider=Ext.extend(Ext.util.Observable,{url:null,capabilities:null,method:"POST",encoding:document.charset||document.characterSet||"UTF-8",timeout:3e4,customParams:null,scales:null,dpis:null,layouts:null,dpi:null,layout:null,constructor:function(a){this.initialConfig=a,Ext.apply(this,a),this.customParams||(this.customParams={}),this.addEvents("loadcapabilities","layoutchange","dpichange","beforeprint","print","printexception","beforeencodelayer","encodelayer","beforedownload"),GeoExt.data.PrintProvider.superclass.constructor.apply(this,arguments),this.scales=new Ext.data.JsonStore({root:"scales",sortInfo:{field:"value",direction:"DESC"},fields:["name",{name:"value",type:"float"}]}),this.dpis=new Ext.data.JsonStore({root:"dpis",fields:["name",{name:"value",type:"float"}]}),this.layouts=new Ext.data.JsonStore({root:"layouts",fields:["name",{name:"size",mapping:"map"},{name:"rotation",type:"boolean"}]}),a.capabilities?this.loadStores():(this.url.split("/").pop()&&(this.url+="/"),this.initialConfig.autoLoad&&this.loadCapabilities())},setLayout:function(a){this.layout=a,this.fireEvent("layoutchange",this,a)},setDpi:function(a){this.dpi=a,this.fireEvent("dpichange",this,a)},print:function(a,b,c){if(a instanceof GeoExt.MapPanel&&(a=a.map),b=b instanceof Array?b:[b],c=c||{},this.fireEvent("beforeprint",this,a,b,c)!==!1){var d=Ext.apply({units:a.getUnits(),srs:a.baseLayer.projection.getCode(),layout:this.layout.get("name"),dpi:this.dpi.get("value")},this.customParams),e=b[0].feature.layer,f=[],g=a.layers.concat();g.remove(a.baseLayer),g.unshift(a.baseLayer),Ext.each(g,function(a){if(a!==e&&a.getVisibility()===!0){var b=this.encodeLayer(a);b&&f.push(b)}},this),d.layers=f;var h=[];if(Ext.each(b,function(a){h.push(Ext.apply({center:[a.center.lon,a.center.lat],scale:a.scale.get("value"),rotation:a.rotation},a.customParams))},this),d.pages=h,c.overview){var i=[];Ext.each(c.overview.layers,function(a){var b=this.encodeLayer(a);b&&i.push(b)},this),d.overviewLayers=i}if(c.legend){var j=c.legend,k=j.rendered;k||(j=j.cloneConfig({renderTo:document.body,hidden:!0}));var l=[];j.items&&j.items.each(function(a){if(!a.hidden){var b=this.encoders.legends[a.getXType()];l=l.concat(b.call(this,a,d.pages[0].scale))}},this),k||j.destroy(),d.legends=l}if("GET"===this.method){var m=Ext.urlAppend(this.capabilities.printURL,"spec="+encodeURIComponent(Ext.encode(d)));this.download(m)}else Ext.Ajax.request({url:this.capabilities.createURL,timeout:this.timeout,jsonData:d,headers:{"Content-Type":"application/json; charset="+this.encoding},success:function(a){var b=Ext.decode(a.responseText).getURL;this.download(b)},failure:function(a){this.fireEvent("printexception",this,a)},params:this.initialConfig.baseParams,scope:this})}},download:function(a){this.fireEvent("beforedownload",this,a)!==!1&&(Ext.isOpera?window.open(a):window.location.href=a),this.fireEvent("print",this,a)},loadCapabilities:function(){if(this.url){var a=this.url+"info.json";Ext.Ajax.request({url:a,method:"GET",disableCaching:!1,success:function(a){this.capabilities=Ext.decode(a.responseText),this.loadStores()},params:this.initialConfig.baseParams,scope:this})}},loadStores:function(){this.scales.loadData(this.capabilities),this.dpis.loadData(this.capabilities),this.layouts.loadData(this.capabilities),this.setLayout(this.layouts.getAt(0)),this.setDpi(this.dpis.getAt(0)),this.fireEvent("loadcapabilities",this,this.capabilities)},encodeLayer:function(a){var b;for(var c in this.encoders.layers)if(OpenLayers.Layer[c]&&a instanceof OpenLayers.Layer[c]){if(this.fireEvent("beforeencodelayer",this,a)===!1)return;b=this.encoders.layers[c].call(this,a),this.fireEvent("encodelayer",this,a,b);break}return b&&b.type?b:null},getAbsoluteUrl:function(a){var b;return Ext.isIE6||Ext.isIE7||Ext.isIE8?(b=document.createElement("<a href='"+a+"'/>"),b.style.display="none",document.body.appendChild(b),b.href=b.href,document.body.removeChild(b)):(b=document.createElement("a"),b.href=a),b.href},encoders:{layers:{Layer:function(a){var b={};return a.options&&a.options.maxScale&&(b.minScaleDenominator=a.options.maxScale),a.options&&a.options.minScale&&(b.maxScaleDenominator=a.options.minScale),b},WMS:function(a){var b=this.encoders.layers.HTTPRequest.call(this,a);Ext.apply(b,{type:"WMS",layers:[a.params.LAYERS].join(",").split(","),
format:a.params.FORMAT,styles:[a.params.STYLES].join(",").split(",")});var c;for(var d in a.params)c=d.toLowerCase(),a.DEFAULT_PARAMS[c]||-1!="layers,styles,width,height,srs".indexOf(c)||(b.customParams||(b.customParams={}),b.customParams[d]=a.params[d]);return b},OSM:function(a){var b=this.encoders.layers.TileCache.call(this,a);return Ext.apply(b,{type:"OSM",baseURL:b.baseURL.substr(0,b.baseURL.indexOf("$")),extension:"png"})},TMS:function(a){var b=this.encoders.layers.TileCache.call(this,a);return Ext.apply(b,{type:"TMS",format:a.type})},TileCache:function(a){var b=this.encoders.layers.HTTPRequest.call(this,a);return Ext.apply(b,{type:"TileCache",layer:a.layername,maxExtent:a.maxExtent.toArray(),tileSize:[a.tileSize.w,a.tileSize.h],extension:a.extension,resolutions:a.serverResolutions||a.resolutions})},WMTS:function(a){var b=this.encoders.layers.HTTPRequest.call(this,a);return Ext.apply(b,{type:"WMTS",layer:a.layer,version:a.version,requestEncoding:a.requestEncoding,tileOrigin:[a.tileOrigin.lon,a.tileOrigin.lat],tileSize:[a.tileSize.w,a.tileSize.h],style:a.style,formatSuffix:a.formatSuffix,dimensions:a.dimensions,params:a.params,maxExtent:null!=a.tileFullExtent?a.tileFullExtent.toArray():a.maxExtent.toArray(),matrixSet:a.matrixSet,zoomOffset:a.zoomOffset,resolutions:a.serverResolutions||a.resolutions})},KaMapCache:function(a){var b=this.encoders.layers.KaMap.call(this,a);return Ext.apply(b,{type:"KaMapCache",group:a.params.g,metaTileWidth:a.params.metaTileSize.w,metaTileHeight:a.params.metaTileSize.h})},KaMap:function(a){var b=this.encoders.layers.HTTPRequest.call(this,a);return Ext.apply(b,{type:"KaMap",map:a.params.map,extension:a.params.i,group:a.params.g||"",maxExtent:a.maxExtent.toArray(),tileSize:[a.tileSize.w,a.tileSize.h],resolutions:a.serverResolutions||a.resolutions})},HTTPRequest:function(a){var b=this.encoders.layers.Layer.call(this,a);return Ext.apply(b,{baseURL:this.getAbsoluteUrl(a.url instanceof Array?a.url[0]:a.url),opacity:null!=a.opacity?a.opacity:1,singleTile:a.singleTile})},Image:function(a){var b=this.encoders.layers.Layer.call(this,a);return Ext.apply(b,{type:"Image",baseURL:this.getAbsoluteUrl(a.getURL(a.extent)),opacity:null!=a.opacity?a.opacity:1,extent:a.extent.toArray(),pixelSize:[a.size.w,a.size.h],name:a.name})},Vector:function(a){if(a.features.length){for(var b,c,d,e,f,g=[],h={},i=a.features,j=new OpenLayers.Format.GeoJSON,k=new OpenLayers.Format.JSON,l=1,m={},n=0,o=i.length;o>n;++n){b=i[n],c=b.style||a.style||a.styleMap.createSymbolizer(b,b.renderIntent),d=k.write(c),e=m[d],e?f=e:(m[d]=f=l++,c.externalGraphic?h[f]=Ext.applyIf({externalGraphic:this.getAbsoluteUrl(c.externalGraphic)},c):h[f]=c);var p=j.extract.feature.call(j,b);p.properties=OpenLayers.Util.extend({_gx_style:f},p.properties),g.push(p)}var q=this.encoders.layers.Layer.call(this,a);return Ext.apply(q,{type:"Vector",styles:h,styleProperty:"_gx_style",geoJson:{type:"FeatureCollection",features:g},name:a.name,opacity:null!=a.opacity?a.opacity:1})}},Markers:function(a){for(var b=[],c=0,d=a.markers.length;d>c;c++){var e=a.markers[c],f=new OpenLayers.Geometry.Point(e.lonlat.lon,e.lonlat.lat),g={externalGraphic:e.icon.url,graphicWidth:e.icon.size.w,graphicHeight:e.icon.size.h,graphicXOffset:e.icon.offset.x,graphicYOffset:e.icon.offset.y},h=new OpenLayers.Feature.Vector(f,{},g);b.push(h)}var i=new OpenLayers.Layer.Vector(a.name);i.addFeatures(b);var j=this.encoders.layers.Vector.call(this,i);return i.destroy(),j}},legends:{gx_wmslegend:function(a,b){for(var c=this.encoders.legends.base.call(this,a),d=[],e=1,f=a.items.getCount();f>e;++e){var g=a.items.get(e).url;if(a.useScaleParameter===!0&&-1!=g.toLowerCase().indexOf("request=getlegendgraphic")){var h=g.split("?"),i=Ext.urlDecode(h[1]);i.SCALE=b,g=h[0]+"?"+Ext.urlEncode(i)}d.push(this.getAbsoluteUrl(g))}return c[0].classes[0]={name:"",icons:d},c},gx_urllegend:function(a){var b=this.encoders.legends.base.call(this,a);return b[0].classes.push({name:"",icon:this.getAbsoluteUrl(a.items.get(1).url)}),b},base:function(a){return[{name:a.getLabel(),classes:[]}]}}}}),Ext.namespace("GeoExt.plugins"),GeoExt.plugins.PrintPageField=Ext.extend(Ext.util.Observable,{printPage:null,target:null,constructor:function(a){this.initialConfig=a,Ext.apply(this,a),GeoExt.plugins.PrintPageField.superclass.constructor.apply(this,arguments)},init:function(a){this.target=a;var b={beforedestroy:this.onBeforeDestroy,scope:this},c=a instanceof Ext.form.ComboBox?"select":a instanceof Ext.form.Checkbox?"check":"valid";b[c]=this.onFieldChange,a.on(b),this.printPage.on({change:this.onPageChange,scope:this}),this.printPage.printProvider.on({layoutchange:this.onLayoutChange,scope:this}),this.setValue(this.printPage)},onFieldChange:function(a,b){var c=this.printPage.printProvider,d=a.getValue();this._updating=!0,a.store===c.scales||"scale"===a.name?this.printPage.setScale(b):"rotation"==a.name?!isNaN(d)&&this.printPage.setRotation(d):this.printPage.customParams[a.name]=d,delete this._updating},onPageChange:function(a){this._updating||this.setValue(a)},onLayoutChange:function(a,b){var c=this.target;"rotation"==c.name&&c.setDisabled(!b.get("rotation"))},setValue:function(a){var b=this.target;b.suspendEvents(),b.store===a.printProvider.scales||"scale"===b.name?a.scale&&b.setValue(a.scale.get(b.displayField)):"rotation"==b.name&&b.setValue(a.rotation),b.resumeEvents()},onBeforeDestroy:function(){this.target.un("beforedestroy",this.onBeforeDestroy,this),this.target.un("select",this.onFieldChange,this),this.target.un("valid",this.onFieldChange,this),this.printPage.un("change",this.onPageChange,this),this.printPage.printProvider.un("layoutchange",this.onLayoutChange,this)}}),Ext.preg("gx_printpagefield",GeoExt.plugins.PrintPageField),Ext.namespace("GeoExt.plugins"),GeoExt.plugins.PrintProviderField=Ext.extend(Ext.util.Observable,{target:null,constructor:function(a){this.initialConfig=a,Ext.apply(this,a),GeoExt.plugins.PrintProviderField.superclass.constructor.apply(this,arguments)},init:function(a){this.target=a;var b={scope:this,render:this.onRender,beforedestroy:this.onBeforeDestroy};b[a instanceof Ext.form.ComboBox?"select":"valid"]=this.onFieldChange,a.on(b)},onRender:function(a){var b=this.printProvider||a.ownerCt.printProvider;a.store===b.layouts?(a.setValue(b.layout.get(a.displayField)),b.on({layoutchange:this.onProviderChange,scope:this})):a.store===b.dpis?(a.setValue(b.dpi.get(a.displayField)),b.on({dpichange:this.onProviderChange,scope:this})):void 0===a.initialConfig.value&&a.setValue(b.customParams[a.name])},onFieldChange:function(a,b){var c=this.printProvider||a.ownerCt.printProvider,d=a.getValue();if(this._updating=!0,b)switch(a.store){case c.layouts:c.setLayout(b);break;case c.dpis:c.setDpi(b)}else c.customParams[a.name]=d;delete this._updating},onProviderChange:function(a,b){this._updating||this.target.setValue(b.get(this.target.displayField))},onBeforeDestroy:function(){var a=this.target;a.un("beforedestroy",this.onBeforeDestroy,this),a.un("render",this.onRender,this),a.un("select",this.onFieldChange,this),a.un("valid",this.onFieldChange,this);var b=this.printProvider||a.ownerCt.printProvider;b.un("layoutchange",this.onProviderChange,this),b.un("dpichange",this.onProviderChange,this)}}),Ext.preg("gx_printproviderfield",GeoExt.plugins.PrintProviderField),Ext.namespace("GeoExt.plugins"),GeoExt.plugins.PrintExtent=Ext.extend(Ext.util.Observable,{initialConfig:null,printProvider:null,map:null,layer:null,control:null,pages:null,page:null,constructor:function(a){a=a||{},Ext.apply(this,a),this.initialConfig=a,this.printProvider||(this.printProvider=this.pages[0].printProvider),this.pages||(this.pages=[]),this.addEvents("selectpage"),GeoExt.plugins.PrintExtent.superclass.constructor.apply(this,arguments)},print:function(a){this.printProvider.print(this.map,this.pages,a)},init:function(a){this.map=a.map,a.on("destroy",this.onMapPanelDestroy,this),this.layer||(this.layer=new OpenLayers.Layer.Vector(null,{displayInLayerSwitcher:!1})),this.createControl();for(var b=0,c=this.pages.length;c>b;++b)this.addPage(this.pages[b]);this.show()},addPage:function(a){a=a||new GeoExt.data.PrintPage({printProvider:this.printProvider}),-1===this.pages.indexOf(a)&&this.pages.push(a),this.layer.addFeatures([a.feature]),a.on("change",this.onPageChange,this),this.page=a;var b=this.map;return b.getCenter()?this.fitPage():b.events.register("moveend",this,function(){b.events.unregister("moveend",this,arguments.callee),this.fitPage()}),a},removePage:function(a){this.pages.remove(a),a.feature.layer&&this.layer.removeFeatures([a.feature]),a.un("change",this.onPageChange,this)},selectPage:function(a){this.control.active&&this.control.setFeature(a.feature)},show:function(){this.map.addLayer(this.layer),this.map.addControl(this.control),this.control.activate(),this.page&&this.map.getCenter()&&this.updateBox()},hide:function(){var a=this.map,b=this.layer,c=this.control;c&&c.events&&(c.deactivate(),a&&a.events&&c.map&&a.removeControl(c)),a&&a.events&&b&&b.map&&a.removeLayer(b)},onMapPanelDestroy:function(){for(var a=this.map,b=this.pages.length-1,c=b;c>=0;c--)this.removePage(this.pages[c]);this.hide();var d=this.control;a&&a.events&&d&&d.events&&d.destroy();var e=this.layer;!this.initialConfig.layer&&a&&a.events&&e&&e.events&&e.destroy(),delete this.layer,delete this.control,delete this.page,this.map=null},createControl:function(){this.control=new OpenLayers.Control.TransformFeature(this.layer,{preserveAspectRatio:!0,eventListeners:{beforesetfeature:function(a){for(var b=0,c=this.pages.length;c>b;++b)if(this.pages[b].feature===a.feature){this.page=this.pages[b],a.object.rotation=-this.pages[b].rotation;break}},setfeature:function(a){for(var b=0,c=this.pages.length;c>b;++b)if(this.pages[b].feature===a.feature){this.fireEvent("selectpage",this.pages[b]);break}},beforetransform:function(a){this._updating=!0;var b=this.page;if(a.rotation)this.printProvider.layout.get("rotation")?b.setRotation(-a.object.rotation):a.object.setFeature(b.feature);else if(a.center)b.setCenter(OpenLayers.LonLat.fromString(a.center.toShortString()));else{b.fit(a.object.box,{mode:"closest"});var c=this.printProvider.scales.getAt(0),d=this.printProvider.scales.getAt(this.printProvider.scales.getCount()-1),e=a.object.box.geometry.getBounds(),f=b.feature.geometry.getBounds(),g=b.scale===c&&e.containsBounds(f),h=b.scale===d&&f.containsBounds(e);(g===!0||h===!0)&&this.updateBox()}return delete this._updating,!1},transformcomplete:this.updateBox,scope:this}})},fitPage:function(){this.page&&this.page.fit(this.map,{mode:"screen"})},updateBox:function(){var a=this.page;this.control.active&&this.control.setFeature(a.feature,{rotation:-a.rotation})},onPageChange:function(a,b){this._updating||this.control.active&&this.control.setFeature(a.feature,{rotation:-a.rotation})}}),Ext.preg("gx_printextent",GeoExt.plugins.PrintExtent),Ext.namespace("GeoExt.plugins"),GeoExt.plugins.AttributeForm=function(a){Ext.apply(this,a)},GeoExt.plugins.AttributeForm.prototype={attributeStore:null,formPanel:null,init:function(a){this.formPanel=a,this.attributeStore instanceof Ext.data.Store&&(this.fillForm(),this.bind(this.attributeStore)),a.on("destroy",this.onFormDestroy,this)},bind:function(a){this.unbind(),a.on({load:this.onLoad,scope:this}),this.attributeStore=a},unbind:function(){this.attributeStore&&this.attributeStore.un("load",this.onLoad,this)},onLoad:function(){this.formPanel.items&&this.formPanel.removeAll(),this.fillForm()},fillForm:function(){this.attributeStore.each(function(a){var b=GeoExt.form.recordToField(a,Ext.apply({checkboxLabelProperty:"fieldLabel"},this.recordToFieldOptions||{}));b&&this.formPanel.add(b)},this),this.formPanel.doLayout()},onFormDestroy:function(){this.unbind()}},Ext.preg("gx_attributeform",GeoExt.plugins.AttributeForm),Ext.namespace("GeoExt"),GeoExt.PrintMapPanel=Ext.extend(GeoExt.MapPanel,{sourceMap:null,printProvider:null,printPage:null,previewScales:null,center:null,zoom:null,extent:null,currentZoom:null,initComponent:function(){this.sourceMap instanceof GeoExt.MapPanel&&(this.sourceMap=this.sourceMap.map),this.map||(this.map={}),Ext.applyIf(this.map,{projection:this.sourceMap.getProjection(),maxExtent:this.sourceMap.getMaxExtent(),maxResolution:this.sourceMap.getMaxResolution(),units:this.sourceMap.getUnits()}),this.printProvider instanceof GeoExt.data.PrintProvider||(this.printProvider=new GeoExt.data.PrintProvider(this.printProvider)),this.printPage=new GeoExt.data.PrintPage({printProvider:this.printProvider}),this.previewScales=new Ext.data.Store,this.previewScales.add(this.printProvider.scales.getRange()),this.layers=[];Ext.each(this.sourceMap.layers,function(a){a.getVisibility()===!0&&this.layers.push(a.clone())},this),this.extent=this.sourceMap.getExtent(),GeoExt.PrintMapPanel.superclass.initComponent.call(this)},bind:function(){this.printPage.on("change",this.fitZoom,this),this.printProvider.on("layoutchange",this.syncSize,this),this.map.events.register("moveend",this,this.updatePage),this.printPage.fit(this.sourceMap),this.initialConfig.limitScales===!0&&(this.on("resize",this.calculatePreviewScales,this),this.calculatePreviewScales())},afterRender:function(){GeoExt.PrintMapPanel.superclass.afterRender.apply(this,arguments),this.syncSize(),this.ownerCt?this.ownerCt.on({afterlayout:{fn:this.bind,scope:this,single:!0}}):this.bind()},adjustSize:function(a,b){var c=this.printProvider.layout.get("size"),d=c.width/c.height,e=this.ownerCt,f=e&&e.autoWidth?0:a||this.initialConfig.width,g=e&&e.autoHeight?0:b||this.initialConfig.height;return f?(b=f/d,g&&b>g?(b=g,a=b*d):a=f):g&&(a=g*d,b=g),{width:a,height:b}},fitZoom:function(){if(!this._updating&&this.printPage.scale){this._updating=!0;var a=this.printPage.getPrintExtent(this.map);this.currentZoom=this.map.getZoomForExtent(a),this.map.zoomToExtent(a),delete this._updating}},updatePage:function(){if(!this._updating){var a=this.map.getZoom();this._updating=!0,a===this.currentZoom?this.printPage.setCenter(this.map.getCenter()):this.printPage.fit(this.map),delete this._updating,this.currentZoom=a}},calculatePreviewScales:function(){this.previewScales.removeAll(),this.printPage.suspendEvents();var a=this.printPage.scale,b=this.map.getSize(),c={},d=[];this.printProvider.scales.each(function(a){this.printPage.setScale(a);var e=this.printPage.getPrintExtent(this.map),f=this.map.getZoomForExtent(e),g=Math.max(e.getWidth()/b.w,e.getHeight()/b.h),h=this.map.getResolutionForZoom(f),i=Math.abs(g-h);(!(f in c)||c[f].diff>i)&&(c[f]={rec:a,diff:i},-1==d.indexOf(f)&&d.push(f))},this);for(var e=0,f=d.length;f>e;++e)this.previewScales.add(c[d[e]].rec);if(a&&this.printPage.setScale(a),this.printPage.resumeEvents(),a&&this.previewScales.getCount()>0){var g=this.previewScales.getAt(0),h=this.previewScales.getAt(this.previewScales.getCount()-1);a.get("value")<h.get("value")?this.printPage.setScale(h):a.get("value")>g.get("value")&&this.printPage.setScale(g)}this.fitZoom()},print:function(a){this.printProvider.print(this.map,[this.printPage],a)},beforeDestroy:function(){this.map.events.unregister("moveend",this,this.updatePage),this.printPage.un("change",this.fitZoom,this),this.printProvider.un("layoutchange",this.syncSize,this),GeoExt.PrintMapPanel.superclass.beforeDestroy.apply(this,arguments)}}),Ext.reg("gx_printmappanel",GeoExt.PrintMapPanel),Ext.namespace("GeoExt.state"),GeoExt.state.PermalinkProvider=function(a){GeoExt.state.PermalinkProvider.superclass.constructor.apply(this,arguments),a=a||{};var b=a.url;delete a.url,Ext.apply(this,a),this.state=this.readURL(b)},Ext.extend(GeoExt.state.PermalinkProvider,Ext.state.Provider,{encodeType:!0,readURL:function(a){var b,c,d,e={},f=OpenLayers.Util.getParameters(a);for(b in f)f.hasOwnProperty(b)&&(c=b.split("_"),c.length>1&&(d=c[0],e[d]=e[d]||{},e[d][c.slice(1).join("_")]=this.encodeType?this.decodeValue(f[b]):f[b]));return e},getLink:function(a){a=a||document.location.href;var b,c,d={},e=this.state;for(b in e)if(e.hasOwnProperty(b))for(c in e[b])d[b+"_"+c]=this.encodeType?unescape(this.encodeValue(e[b][c])):e[b][c];OpenLayers.Util.applyDefaults(d,OpenLayers.Util.getParameters(a));var f=OpenLayers.Util.getParameterString(d),g=a.indexOf("?");return g>0&&(a=a.substring(0,g)),Ext.urlAppend(a,f)}}),Ext.namespace("GeoExt"),GeoExt.Lang=new(Ext.extend(Ext.util.Observable,{locale:navigator.language||navigator.userLanguage,dict:null,constructor:function(){this.addEvents("localize"),this.dict={},Ext.util.Observable.constructor.apply(this,arguments)},add:function(a,b){var c=this.dict[a];if(c)for(var d in b)c[d]=Ext.apply(c[d]||{},b[d]);else this.dict[a]=Ext.apply({},b);a&&a!==this.locale?0===this.locale.indexOf(a+"-")&&this.set(this.locale):this.set(a)},set:function(a){for(var b,c=a?a.split("-"):[],d="",e={},f=0,g=c.length;g>f;++f)if(d+=(d&&"-"||"")+c[f],d in this.dict){b=this.dict[d];for(var h in b)h in e?Ext.apply(e[h],b[h]):e[h]=Ext.apply({},b[h])}for(var h in e){for(var i=window,j=h.split("."),k=!1,f=0,g=j.length;g>f;++f){var l=j[f];if(!(l in i)){k=!0;break}i=i[l]}k||Ext.apply(i,e[h])}this.locale=a,this.fireEvent("localize",a)}}));
//# sourceMappingURL=GeoExt-build.js.map