Ext.namespace("Ext.data.Store")
Ext.data.Store.prototype.getValueArray=function(value){var aszValues=[];var nValues=this.getCount();for(var i=0;i<nValues;i++){aszValues.push(this.getAt(i).get(value));}
return aszValues;};Ext.namespace("GeoExt.ux.data");GeoExt.ux.data.WMSBrowserWMSCapabilitiesStore=Ext.extend(GeoExt.data.WMSCapabilitiesStore,{url:null,layerOptions:null,wmsbrowser:null,gridPanel:null,map:null,constructor:function(config){Ext.apply(this,config);this.map=this.wmsbrowser.layerStore.map;arguments.callee.superclass.constructor.call(this,config);this.on('load',this.onCapabilitiesLoad,this);this.on('loadexception',this.onCapabilitiesLoadException,this);},onCapabilitiesLoad:function(store,records,options){var srs=this.map.getProjection();var mapMaxExtent=this.map.getMaxExtent().clone().transform(new OpenLayers.Projection(this.map.getProjection()),new OpenLayers.Projection('EPSG:4326'));this.wmsbrowser.resetLayerPreview();for(var i=0;i<records.length;i++){var record=records[i];if(record.get('srs')[srs]===true||OpenLayers.Util.indexOf(record.get('srs'),srs)>=0){record.set("srsCompatible",true);}else{record.set("srsCompatible",false);}
var layerExtent=record.get("llbbox");var extent;if(layerExtent)
{if(typeof layerExtent=="string"){extent=OpenLayers.Bounds.fromString(layerExtent);}else if(layerExtent instanceof Array){extent=OpenLayers.Bounds.fromArray(layerExtent);}}
if(!extent||mapMaxExtent.intersectsBounds(extent,false)){record.set("extentCompatible",true);}else{record.set("extentCompatible",false);}}
if(this.getCount()>0){this.wmsbrowser.fireEvent('getcapabilitiessuccess');if(this.gridPanel&&this.wmsbrowser.selectFirstRecordOnStoreLoad){this.gridPanel.getSelectionModel().selectRow(0);}
var xtype=this.wmsbrowser.serverComboBox.getXType();if(xtype==Ext.form.ComboBox.xtype){var aszUrls=this.wmsbrowser.serverComboBox.store.getValueArray('url');var index=OpenLayers.Util.indexOf(aszUrls,this.wmsbrowser.currentUrl);if(index==-1){var record=new Ext.data.Record({'url':this.wmsbrowser.currentUrl});this.wmsbrowser.serverComboBox.store.add([record]);}}}else{this.wmsbrowser.fireEvent('genericerror',this.wmsbrowser.noLayerReturnedText);}},onCapabilitiesLoadException:function(){this.wmsbrowser.fireEvent('getcapabilitiesfail');}});Ext.namespace("GeoExt.ux.plugins");GeoExt.ux.plugins.WMSBrowserAlerts=Ext.extend(Ext.util.Observable,{wmsbrowser:null,autoHidePopup:false,popupTimeout:4000,init:function(wmsbrowser,config){this.wmsbrowser=wmsbrowser;this.popupTimeout=this.wmsbrowser.alertPopupTimeout;this.autoHidePopup=this.wmsbrowser.alertPopupAutoHide;this.wmsbrowser.on('getcapabilitiesfail',this.onGetCapabilitiesFail,this);this.wmsbrowser.on('genericerror',this.onGenericError,this);},showPopup:function(title,message,extIcon){if(!extIcon){extIcon=Ext.MessageBox.WARNING}
if(Ext.MessageBox.getDialog().manager.zseed<=Ext.WindowMgr.zseed){Ext.MessageBox.getDialog().manager=new Ext.WindowGroup();Ext.MessageBox.getDialog().manager.zseed=Ext.WindowMgr.zseed+1000;}
Ext.MessageBox.show({title:title,msg:message,modal:false,width:300,buttons:Ext.MessageBox.OK,icon:extIcon});if(this.autoHidePopup){setTimeout(function(){Ext.MessageBox.hide();},this.popupTimeout);}},onGetCapabilitiesFail:function(){this.showPopup(this.wmsbrowser.errorText,this.wmsbrowser.urlInvalidText);},onGenericError:function(message){this.showPopup(this.wmsbrowser.warningText,message);}});Ext.namespace("GeoExt.ux");GeoExt.ux.WMSBrowser=Ext.extend(Ext.Panel,{CUSTOM_EVENTS:["beforegetcapabilities","getcapabilitiessuccess","getcapabilitiesfail","genericerror","beforelayeradded","layeradded"],DEFAULT_CAPABILITIES_PARAMS:{'service':"WMS",'request':"GetCapabilities",'version':'1.1.1'},DEFAULT_LAYER_BROWSER_XTYPE:Ext.tree.TreePanel.xtype,inputURLText:"Select or input a server address (URL)",connectText:"Connect",pleaseInputURLText:"Please, select or input a server adress (URL) in the"+" dropdown list first.",srsCompatibleText:"SRS compatible",extentCompatibleText:"Extent compatible",titleText:"Title",nameText:"Name",queryableText:"Queryable",descriptionText:"Description",yesText:"Yes",noText:"No",addLayerText:"Add layer",addSelectedLayersText:"Add currently selected layers as one single layer.",mapPanelPreviewTitleText:"Map preview",layerCantBeAddedText:"This layer can't be added : ",srsNotSupportedText:"This layer can't be added to the current map"+" because it doesn't support its projection.",srsNotSupportedShortText:"it doesn't support the map current projection",extentNotSupportedShortText:"it is out of the map bounds",pleaseSelectALayerText:"Please, select one or more layers from the grid first.",pleaseCheckALayerInTreeText:"Please, check one or more layers from the tree first.",closeWindowText:"Close this window",closeText:"Close",inputURLInvalidText:"The url address entered is not valid.",layerNameText:"Layer name :",noLayerReturnedText:"The url address is valid but returned no layers.",layersSuccessfullyLoadedText:"Layers successfully loaded.",layerAddedText:"Layer(s) successfully added to the map.",urlInvalidText:"The server address (url) is invalid or is not a valid WMS server.",pleaseInputLayerNameText:"Please, input a layer name in the textfield below.",warningText:"Warning",errorText:"Error",layerStore:null,serverStore:null,serverStoreDisplayField:'url',layout:'border',defaultType:'textfield',defaults:{style:'padding:2px;margin:0px;'},capabilitiesParams:{},mapPanelPreviewOptions:{},layerNameFieldOptions:{},layerOptions:null,useIcons:false,zoomOnLayerAdded:false,closeOnLayerAdded:false,allowInvalidUrl:false,selectFirstRecordOnStoreLoad:false,alertPopupAutoHide:false,proxyHost:null,layerBrowserXtype:null,alertPopupTimeout:4000,currentUrl:null,layerPreview:null,mapPanelPreview:null,gridPanel:null,infoPanel:null,centerPanel:null,serverComboBox:null,layerNameField:null,statusBar:null,treePanel:null,constructor:function(config){Ext.apply(this,config);if(!this.serverStore){this.serverStore=new Ext.data.SimpleStore({fields:['url'],data:[]});}
Ext.applyIf(this.capabilitiesParams,this.DEFAULT_CAPABILITIES_PARAMS);this.layerBrowserXtype=this.layerBrowserXtype||this.DEFAULT_LAYER_BROWSER_XTYPE;this.addEvents(this.CUSTOM_EVENTS);this.initMyItems();this.initMyToolbar();arguments.callee.superclass.constructor.call(this,config);this.on("afterrender",this.onAfterRender,this);},initMyItems:function(){this.serverComboBox=new Ext.form.ComboBox({style:'padding:0px;margin:0px;',columnWidth:0.85,'name':'wms_url',xtype:'combo',store:this.serverStore,displayField:this.serverStoreDisplayField,typeAhead:true,mode:'local',forceSelection:false,triggerAction:'all',allowBlank:false,validator:this.urlValidator,invalidText:this.inputURLInvalidText,emptyText:this.inputURLText,selectOnFocus:true});var northPanel=new Ext.form.FormPanel({height:'auto',autoHeight:true,border:false,region:'north',layout:'column',items:[this.serverComboBox,{columnWidth:0.15,width:'100%',style:'padding:0px;margin:0px;',xtype:'button',text:this.connectText,scope:this,handler:function(b,e){this.triggerGetCapabilities();}}]});this.mapPanelPreview=new GeoExt.MapPanel(Ext.applyIf(this.mapPanelPreviewOptions,{xtype:"gx_mappanel",title:this.mapPanelPreviewTitleText,region:'south',collapsible:true,collapsed:true,border:false,height:200,floatable:false,minSize:100,split:true,layers:[new OpenLayers.Layer("dummy")]}));this.mapPanelPreview.on("collapse",this.hideLayerPreview,this);this.mapPanelPreview.on("expand",this.showLayerPreview,this);switch(this.layerBrowserXtype)
{case Ext.grid.GridPanel.xtype:this.capStore=this.createCapStore();this.gridPanel=this.createGridPanel();this.capStore.gridPanel=this.gridPanel;this.layerBrowser=this.gridPanel;break;case Ext.tree.TreePanel.xtype:this.treePanel=this.createTreePanel();this.layerBrowser=this.treePanel;break;}
this.statusBar=(GeoExt.ux.WMSBrowserStatusBar)?new GeoExt.ux.WMSBrowserStatusBar({'wmsbrowser':this}):null;if(!this.statusBar){Ext.apply(this,{plugins:[new GeoExt.ux.plugins.WMSBrowserAlerts()]});}
this.infoPanel=new Ext.Panel({anchor:'50% 100%',x:'50%',y:'0',region:'east',width:'50%',layout:'border',border:true,items:[this.createFormPanel(),this.mapPanelPreview]});var centerPanel=new Ext.form.FormPanel({tbar:this.statusBar,region:'center',layout:'border',border:false,items:[this.treePanel||this.gridPanel,this.infoPanel]});centerPanel.on('bodyresize',function(){this.infoPanel.setWidth('50%');},this);this.centerPanel=centerPanel;Ext.apply(this,{items:[northPanel,centerPanel]});},createCapStore:function(){return new GeoExt.ux.data.WMSBrowserWMSCapabilitiesStore({'url':"",layerOptions:this.layerOptions,wmsbrowser:this});},createGridPanel:function(){return new GeoExt.ux.grid.WMSBrowserGridPanel({store:this.capStore,wmsbrowser:this});},createTreePanel:function(){var options={'wmsbrowser':this};return new GeoExt.ux.tree.WMSBrowserTreePanel(options);},createFormPanel:function(){this.descriptionField=new Ext.form.TextArea({name:'abstract',x:0,y:15,anchor:'100% 100%'});var options={xtype:'fieldset',layout:'absolute',region:'center',labelWidth:80,anchor:'100% 100%',defaultType:'textfield',border:false,items:[{x:0,y:0,xtype:'label',text:this.descriptionText},this.descriptionField]};return options;},resetCenterFormPanel:function(){this.centerPanel.getForm().reset();},initMyToolbar:function(){var items=[];items.push('->');items.push({xtype:'label',text:this.layerNameText});this.layerNameField=new Ext.form.TextField(Ext.applyIf(this.layerNameFieldOptions,{width:275,xtype:'textfield'}));items.push(this.layerNameField);items.push('-');var actionOptions={handler:this.addLayer,scope:this,tooltip:this.addSelectedLayersText};if(this.useIcons===true){actionOptions.iconCls="gx-wmsbrowser-addlayer";}else{actionOptions.text=this.addLayerText;}
var action=new Ext.Action(actionOptions);items.push(action);Ext.apply(this,{bbar:new Ext.Toolbar(items)});},triggerGetCapabilities:function(){var url=this.serverComboBox.getValue();this.resetAll();if(!this.serverComboBox.isValid()){if(!url){this.fireEvent('genericerror',this.pleaseInputURLText);return;}
else if(!this.allowInvalidUrl){this.fireEvent('genericerror',this.inputURLInvalidText);return;}}
this.fireEvent('beforegetcapabilities');this.currentUrl=url;var params=OpenLayers.Util.getParameterString(this.capabilitiesParams);url=OpenLayers.Util.urlAppend(url,params);url=Igo.Aide.utiliserProxy(url);if(this.gridPanel){this.capStore.proxy.setUrl(url);this.capStore.proxy.setApi(Ext.data.Api.actions.read,url);this.capStore.load();}else if(this.treePanel){this.treePanel.loadURL(url);}},addLayer:function(){if(this.layerBrowser.addLayer()){if(this.closeOnLayerAdded&&this.ownerCt.getXType()==Ext.Window.xtype){this.closeWindow();}}},onAfterRender:function(){if(this.ownerCt.getXType()==Ext.Window.xtype){this.addCloseButton();}},addCloseButton:function(){var actionOptions={handler:this.closeWindow,scope:this,tooltip:this.closeWindowText};if(this.useIcons===true){actionOptions.iconCls="gx-wmsbrowser-close";}else{actionOptions.text=this.closeText;}
var action=new Ext.Action(actionOptions);this.getBottomToolbar().add(action);},closeWindow:function(){this.ownerCt.hide();},urlValidator:function(url){return Ext.form.VTypes.url(url);},zoomToRecordLLBBox:function(record,zoomToMaxExtent){if(zoomToMaxExtent==null){zoomToMaxExtent=true;}
var zoomed=false;var layerExtent;if(record instanceof OpenLayers.Layer){layerExtent=record.metadata.llbbox;}else{layerExtent=record.get("llbbox");}
if(layerExtent)
{var extent;if(typeof layerExtent=="string"){extent=OpenLayers.Bounds.fromString(layerExtent);}else if(layerExtent instanceof Array){extent=OpenLayers.Bounds.fromArray(layerExtent);}
if(extent){this.mapPanelPreview.map.zoomToExtent(extent);zoomed=true;}}
if(zoomToMaxExtent&&!zoomed){this.mapPanelPreview.map.zoomToMaxExtent();}},hideLayerPreview:function(){if(this.layerPreview){if(this.layerPreview instanceof OpenLayers.Layer){this.layerPreview.setVisibility(false);}else{this.layerPreview.get('layer').setVisibility(false);}}},showLayerPreview:function(){if(this.layerPreview){if(this.layerPreview instanceof OpenLayers.Layer){this.layerPreview.setVisibility(true);}else{this.layerPreview.get('layer').setVisibility(true);}}},resetLayerPreview:function(){if(this.layerPreview){this.mapPanelPreview.layers.removeAll();this.mapPanelPreview.map.addLayer(new OpenLayers.Layer("dummy"));this.layerPreview=null;}},isLayerNameValid:function(){var validLayerName=true;var layerName=this.layerNameField.getValue();if(!layerName||layerName==""){this.fireEvent('genericerror',this.pleaseInputLayerNameText);validLayerName=false;}
return validLayerName;},resetLayerName:function(){this.layerNameField.reset();},resetAll:function(){this.resetLayerPreview();this.resetLayerName();this.resetCenterFormPanel();}});Ext.namespace("GeoExt.ux")
if(Ext.ux.StatusBar){GeoExt.ux.WMSBrowserStatusBar=Ext.extend(Ext.ux.StatusBar,{text:'Ready',busyText:'Loading layers...',defaultText:'Ready',iconCls:'x-status-valid',defaultIconCls:'x-status-valid',wmsbrowser:null,constructor:function(config){Ext.apply(this,config);arguments.callee.superclass.constructor.call(this,config);this.wmsbrowser.on('beforegetcapabilities',this.onBeforeGetCapabilities,this);this.wmsbrowser.on('getcapabilitiessuccess',this.onGetCapabilitiesSuccess,this);this.wmsbrowser.on('getcapabilitiesfail',this.onGetCapabilitiesFail,this);this.wmsbrowser.on('genericerror',this.onGenericError,this);this.wmsbrowser.on('layeradded',this.onLayerAdded,this);},onBeforeGetCapabilities:function(){this.showBusy();},onGetCapabilitiesSuccess:function(){this.setStatus({text:this.wmsbrowser.layersSuccessfullyLoadedText,iconCls:'x-status-valid',clear:true});},onGetCapabilitiesFail:function(){this.setStatus({text:this.wmsbrowser.urlInvalidText,iconCls:'x-status-error',clear:true});},onGenericError:function(message){this.setStatus({text:message,iconCls:'x-status-error',clear:true});},onLayerAdded:function(){this.setStatus({text:this.wmsbrowser.layerAddedText,iconCls:'x-status-valid',clear:true});}});}
Ext.namespace("GeoExt.ux.grid");GeoExt.ux.grid.WMSBrowserGridPanel=Ext.extend(Ext.grid.GridPanel,{layout:'absolute',x:0,y:0,region:'center',anchor:'50% 100%',store:null,columns:null,sm:null,autoExpandColumn:"title",width:'auto',autoWidth:true,border:true,wmsbrowser:null,map:null,layerStore:null,constructor:function(config){Ext.apply(this,config);this.layerStore=this.wmsbrowser.layerStore;this.map=this.layerStore.map;var checkboxSelectionModel=new Ext.grid.CheckboxSelectionModel({singleSelect:false,renderer:function(value,metaData,record){if(record.get('srsCompatible')==false||record.get('extentCompatible'==false)){return;}
return Ext.grid.CheckboxSelectionModel.prototype.renderer.apply(this,arguments);},listeners:{beforerowselect:function(sm,row,keep,rec){return sm.scope.isRecordSelectable(rec);},rowselect:function(sm,row,rec){sm.scope.wmsbrowser.centerPanel.getForm().loadRecord(rec);sm.scope.addLayerToPreview(rec);sm.scope.setLayerNameFromSelectedRecords();},rowdeselect:function(sm,row,rec){sm.scope.wmsbrowser.centerPanel.getForm().reset();sm.scope.removeLayerFromPreview(rec);sm.scope.setLayerNameFromSelectedRecords();}},scope:this});var columns=[checkboxSelectionModel,{header:this.wmsbrowser.srsCompatibleText,scope:this,dataIndex:"srsCompatible",hidden:false,renderer:this.boolRenderer,width:30,hidden:true},{header:this.wmsbrowser.extentCompatibleText,scope:this,dataIndex:"extentCompatible",hidden:false,renderer:this.boolRenderer,width:30,hidden:true},{header:this.wmsbrowser.titleText,scope:this,dataIndex:"title",id:"title",sortable:true},{header:this.wmsbrowser.nameText,scope:this,dataIndex:"name",sortable:true},{header:this.wmsbrowser.queryableText,scope:this,dataIndex:"queryable",sortable:true,hidden:true,renderer:this.boolRenderer,width:30},{header:this.wmsbrowser.descriptionText,scope:this,dataIndex:"abstract",hidden:true}];Ext.apply(this,{columns:columns,sm:checkboxSelectionModel});arguments.callee.superclass.constructor.call(this,config);},boolRenderer:function(bool){return(bool)?'<span style="color:green;">'+this.wmsbrowser.yesText+'</span>':'<span style="color:red;">'+this.wmsbrowser.noText+'</span>';},addLayerToPreview:function(record){if(!this.wmsbrowser.layerPreview){this.wmsbrowser.layerPreview=record.clone();this.wmsbrowser.layerPreview.data.layer=record.data.layer.clone();this.wmsbrowser.layerPreview.get("layer").mergeNewParams({format:"image/png",transparent:"true"});this.wmsbrowser.layerPreview.get("layer").mergeNewParams({'LAYERS':[this.wmsbrowser.layerPreview.get("layer").params.LAYERS]});this.wmsbrowser.mapPanelPreview.layers.add(this.wmsbrowser.layerPreview);if(this.wmsbrowser.mapPanelPreview.collapsed){this.wmsbrowser.hideLayerPreview();}
this.wmsbrowser.zoomToRecordLLBBox(this.wmsbrowser.layerPreview);}else{this.wmsbrowser.layerPreview.get("layer").params.LAYERS.push(record.get("layer").params.LAYERS);this.wmsbrowser.layerPreview.get("layer").mergeNewParams({'LAYERS':this.wmsbrowser.layerPreview.get("layer").params.LAYERS});this.wmsbrowser.zoomToRecordLLBBox(record,false);}},removeLayerFromPreview:function(record){if(!this.wmsbrowser.layerPreview){return;}
var layers=this.wmsbrowser.layerPreview.get("layer").params.LAYERS;var index=OpenLayers.Util.indexOf(layers,record.get("layer").params.LAYERS);if(index!=-1){layers.splice(index,1);}
this.wmsbrowser.layerPreview.get("layer").mergeNewParams({'LAYERS':layers});},getLayerNameFromSelectedRecords:function(){var layerName=[];var records=this.getSelectionModel().getSelections();for(var i=0,len=records.length;i<len;i++){var record=records[i];if(record.get('title')!=""){layerName.push(record.get('title'));}else if(record.get('name')!=""){layerName.push(record.get('name'));}}
return layerName.join(', ');},setLayerNameFromSelectedRecords:function(){this.wmsbrowser.layerNameField.setValue(this.getLayerNameFromSelectedRecords());},isRecordSelectable:function(record){var compatible=true;var reasons=[];if(!record.get("srsCompatible")){compatible=false;reasons.push(this.wmsbrowser.srsNotSupportedShortText+" ("+this.map.getProjection()+")");}
if(!record.get("extentCompatible")){compatible=false;reasons.push(this.wmsbrowser.extentNotSupportedShortText+" ("+this.map.getExtent().toBBOX()+")");}
if(!compatible){var layerName="";if(record.get('title')!=""){layerName=record.get('title')+" : ";}else if(record.get('name')!=""){layerName=record.get('name')+" : ";}
var message=layerName+this.wmsbrowser.layerCantBeAddedText+reasons.join(', ');this.wmsbrowser.fireEvent('genericerror',message);}
return compatible;},addLayer:function(){var records=this.getSelectionModel().getSelections();if(records.length==0){if(this.store.getTotalCount()>0){this.wmsbrowser.fireEvent('genericerror',this.wmsbrowser.pleaseSelectALayerText);}else{this.wmsbrowser.fireEvent('genericerror',this.wmsbrowser.pleaseInputURLText);}
return;}
if(!this.wmsbrowser.isLayerNameValid()){return;}
var newlayerRecord,layersParam=[];for(var i=0,len=records.length;i<len;i++){var record=records[i];if(record.get("srsCompatible")===false){alert(this.wmsbrowser.srsNotSupportedText);continue;}
if(!newLayerRecord){var newLayerRecord=record.clone();newLayerRecord.data.layer=record.data.layer.clone();newLayerRecord.get("layer").mergeNewParams({format:"image/png",transparent:"true"});layersParam.push(newLayerRecord.get("layer").params.LAYERS);}else{layersParam.push(record.get("layer").params.LAYERS);}}
if(newLayerRecord){newLayerRecord.get("layer").mergeNewParams({'LAYERS':layersParam});newLayerRecord.get("layer").name=this.wmsbrowser.layerNameField.getValue();var addLayer=this.wmsbrowser.fireEvent('beforelayeradded',{'layerRecord':newLayerRecord});if(addLayer!==false){this.layerStore.add(newLayerRecord);this.wmsbrowser.fireEvent('layeradded',{'layerRecord':newLayerRecord});if(this.wmsbrowser.zoomOnLayerAdded){this.map.zoomToExtent(OpenLayers.Bounds.fromArray(newLayerRecord.get("llbbox")).transform(new OpenLayers.Projection("EPSG:4326"),new OpenLayers.Projection(this.map.getProjection())));}}}}});Ext.namespace("GeoExt.ux.tree");var url_init_msp=Igo.nav.barreOutils.obtenirOutilsParType('OutilAjoutWMS')[0]._MyWMSBrowser.Store.data.first().data.url+"?service=WMS&request=GetCapabilities&version=1.1.1";url_init_msp=Igo.Aide.utiliserProxy(url_init_msp);GeoExt.ux.tree.WMSBrowserRootNode=Ext.extend(Ext.tree.AsyncTreeNode,{INIT_URL:"",wmsbrowser:null,loader:null,constructor:function(config){Ext.apply(this,config);Ext.apply(this,{loader:new GeoExt.tree.WMSCapabilitiesLoader({url:url_init_msp,layerOptions:{buffer:0,ratio:1,singleTile:true,transitionEffect:'null'},layerParams:{'TRANSPARENT':'TRUE'},createNode:function(attr){attr.checked=attr.leaf?false:undefined;return GeoExt.tree.WMSCapabilitiesLoader.prototype.createNode.apply(this,[attr]);}})});arguments.callee.superclass.constructor.call(this,config);this.on('load',this.onWMSCapabilitiesLoad,this);this.on('loadexception',this.onWMSCapabilitiesLoadException,this);},setLoaderURL:function(url){this.loader.url=url;this.reload();},onWMSCapabilitiesLoad:function(){if(this.hasChildNodes()){this.wmsbrowser.fireEvent('getcapabilitiessuccess');}else if(this.loader.url!=this.INIT_URL){this.onWMSCapabilitiesStoreLoadException();}},onWMSCapabilitiesStoreLoadException:function(){this.wmsbrowser.fireEvent('getcapabilitiesfail');},getLayerNameFromCheckedNodes:function(){var layerName=[];this.cascade(function(){var layer=this.attributes.layer;if(!layer||!this.getUI().isChecked()){return;}
if(layer.metadata.title!=""){layerName.push(layer.metadata.title);}else if(layer.metadata.name!=""){layerName.push(layer.metadata.name);}});return layerName.join(', ');},getNewLayerFromCheckedNodes:function(){var newLayer;this.cascade(function(){var layer=this.attributes.layer;if(!layer||!this.getUI().isChecked()){return;}
if(!newLayer){newLayer=layer.clone();newLayer.mspClassMeta=layer.metadata.name;newLayer.mergeNewParams({format:"image/png",mspClassMeta:layer.mspClassMeta,transparent:"true",transitionEffect:'null'});newLayer.mergeNewParams({'LAYERS':[newLayer.params.LAYERS]});}else{newLayer.mspClassMeta=layer.metadata.name;newLayer.params.LAYERS.push(layer.params.LAYERS);newLayer.mergeNewParams({'LAYERS':newLayer.params.LAYERS});}});return newLayer;}});Ext.namespace("GeoExt.ux.tree");GeoExt.ux.tree.WMSBrowserTreePanel=Ext.extend(Ext.tree.TreePanel,{rootVisible:false,layout:'absolute',x:0,y:0,region:'center',anchor:'50% 100%',border:false,autoScroll:true,useArrows:true,animate:true,root:null,wmsbrowser:null,constructor:function(config){Ext.apply(this,config);Ext.apply(this,{listeners:{'checkchange':function(node,checked){if(checked===true){if(!this.isLayerCompatible(node.attributes.layer)){node.getUI().checkbox.checked=false;}else{this.addLayerToPreview(node.attributes.layer);this.setLayerNameFromCheckedNodes();this.loadLayerMetadata(node.attributes.layer);}}else{this.removeLayerFromPreview(node.attributes.layer);this.setLayerNameFromCheckedNodes();this.wmsbrowser.resetCenterFormPanel();}}}});this.root=new GeoExt.ux.tree.WMSBrowserRootNode(config);this.layerStore=this.wmsbrowser.layerStore;this.map=this.layerStore.map;arguments.callee.superclass.constructor.call(this,config);},loadURL:function(url){this.getRootNode().setLoaderURL(url);},addLayerToPreview:function(layer){var layerPreview=this.wmsbrowser.layerPreview;var mapPanelPreview=this.wmsbrowser.mapPanelPreview;if(!layerPreview){layerPreview=layer.clone();layerPreview.mergeNewParams({format:"image/png",transparent:"TRUE"});layerPreview.mergeNewParams({'LAYERS':[layerPreview.params.LAYERS]});layerPreview.url=Igo.Aide.utiliserProxy(layerPreview.url);mapPanelPreview.map.addLayer(layerPreview);if(mapPanelPreview.collapsed){this.wmsbrowser.hideLayerPreview();}
this.wmsbrowser.zoomToRecordLLBBox(layerPreview);this.wmsbrowser.layerPreview=layerPreview;}else{layerPreview.params.LAYERS.push(layer.params.LAYERS);layerPreview.mergeNewParams({'LAYERS':layerPreview.params.LAYERS});this.wmsbrowser.zoomToRecordLLBBox(layerPreview,false);}},removeLayerFromPreview:function(layer){var layerPreview=this.wmsbrowser.layerPreview;if(!layerPreview){return;}
var layers=layerPreview.params.LAYERS;var index=OpenLayers.Util.indexOf(layers,layer.params.LAYERS);if(index!=-1){layers.splice(index,1);}
if(layers.length==0){this.wmsbrowser.resetLayerPreview();}else{layerPreview.mergeNewParams({'LAYERS':layers});}},setLayerNameFromCheckedNodes:function(){this.wmsbrowser.layerNameField.setValue(this.root.getLayerNameFromCheckedNodes());},addLayer:function(){var layerAdded=false;var layerPreview=this.wmsbrowser.layerPreview;var map=this.wmsbrowser.layerStore.map;if(!this.root.hasChildNodes()){this.wmsbrowser.fireEvent('genericerror',this.wmsbrowser.pleaseInputURLText);}else if(layerPreview){if(this.wmsbrowser.isLayerNameValid()){var newLayer=this.root.getNewLayerFromCheckedNodes();newLayer.name=this.wmsbrowser.layerNameField.getValue();var addLayer=this.wmsbrowser.fireEvent('beforelayeradded',{'layer':newLayer});if(addLayer!==false){var igoCouche=new Igo.Couches.WMS({layerOL:newLayer});Igo.Aide.obtenirNavigateur().carte.gestionCouches.ajouterCouche(igoCouche);this.wmsbrowser.fireEvent('layeradded',{'layer':newLayer});layerAdded=true;if(this.wmsbrowser.zoomOnLayerAdded){var bounds=OpenLayers.Bounds.fromArray(newLayer.metadata.llbbox);map.zoomToExtent(bounds.transform(new OpenLayers.Projection("EPSG:4326"),new OpenLayers.Projection(map.getProjection())));}}}}else{this.wmsbrowser.fireEvent('genericerror',this.wmsbrowser.pleaseCheckALayerInTreeText);}
return layerAdded;},loadLayerMetadata:function(layer){if(layer&&layer.metadata.abstract){this.wmsbrowser.descriptionField.setValue(layer.metadata.abstract);}else{this.wmsbrowser.descriptionField.setValue("");}},isLayerCompatible:function(layer){var compatible=true;var reasons=[];var srs=this.map.getProjection();var mapMaxExtent=this.map.getMaxExtent().clone().transform(new OpenLayers.Projection(this.map.getProjection()),new OpenLayers.Projection('EPSG:4326'));if(!(layer.metadata.srs[srs]===true||OpenLayers.Util.indexOf(layer.metadata.srs,srs)>=0)){compatible=false;reasons.push(this.wmsbrowser.srsNotSupportedShortText+" ("+this.map.getProjection()+")");}
var layerExtent=layer.metadata.llbbox;var extent;if(layerExtent)
{if(typeof layerExtent=="string"){extent=OpenLayers.Bounds.fromString(layerExtent);}else if(layerExtent instanceof Array){extent=OpenLayers.Bounds.fromArray(layerExtent);}}
if(!(!extent||mapMaxExtent.intersectsBounds(extent,false))){compatible=false;reasons.push(this.wmsbrowser.extentNotSupportedShortText+" ("+this.map.getExtent().toBBOX()+")");}
if(!compatible){var layerName="";if(layer.metadata.title!=""){layerName=layer.metadata.title+" : ";}else if(layer.metadata.name!=""){layerName=layer.metadata.name+" : ";}
var message=layerName+this.wmsbrowser.layerCantBeAddedText+reasons.join(', ');this.wmsbrowser.fireEvent('genericerror',message);}
return compatible;}});Ext.override(GeoExt.tree.WMSCapabilitiesLoader,{processResponse:function(response,node,callback,scope){var content;if(Igo.BrowserDetect.browser=="Explorer"){content=response.responseText;var xmlDoc=new ActiveXObject("Microsoft.XMLDOM");xmlDoc.async=false;xmlDoc.validateOnParse=false;xmlDoc.resolveExternals=false;var parsed=xmlDoc.loadXML(content);if(!parsed){var myErr=xmlDoc.parseError;alert(myErr.reason);}else{content=xmlDoc;}}else{content=response.responseXML||response.responseText;}
var capabilities=new OpenLayers.Format.WMSCapabilities().read(content);if(!capabilities.capability){scope.loading=false;node.wmsbrowser.fireEvent('getcapabilitiesfail');}
else{this.processLayer(capabilities.capability,capabilities.capability.request.getmap.href,node);if(typeof callback=="function"){callback.apply(scope||node,[node]);}}}});Ext.namespace("GeoExt.ux")
if(GeoExt.ux.WMSBrowser){Ext.apply(GeoExt.ux.WMSBrowser.prototype,{inputURLText:"Sélectionner ou entrer une adresse de serveur (URL)",connectText:"Connexion",pleaseInputURLText:"Veuillez sélectionner ou entrer une adresse de serveur (URL) dans la boîte déroulante d'abord.",srsCompatibleText:"SRS compatible",extentCompatibleText:"Extent compatible",titleText:"Titre",nameText:"Nom",queryableText:"Interrogeable",descriptionText:"Description",yesText:"Oui",noText:"Non",addLayerText:"Ajouter",addSelectedLayersText:"Ajouter les couches présentement sélectionnées en tant qu'une seule couche.",mapPanelPreviewTitleText:"Aperçu de la carte",layerCantBeAddedText:"Cette couche ne peut être ajoutée : ",srsNotSupportedText:"Cette couche ne peut être ajoutée à la présente carte parce qu'elle ne supporte pas sa projection.",srsNotSupportedShortText:"elle ne supporte pas la projection de la carte",extentNotSupportedShortText:"elle est en dehors de l'extent de la carte",pleaseSelectALayerText:"Veuillez sélectionner une ou plusieurs couches dans la grille d'abord.",pleaseCheckALayerInTreeText:"Veuillez cocher une ou plusieurs couches dans l'arbre d'abord.",closeWindowText:"Fermer cette fenêtre",closeText:"Fermer",inputURLInvalidText:"L'adresse (url) entrée n'est pas valide.",layerNameText:"Nom de la couche :",noLayerReturnedText:"L'adresse entrée est valide mais n'a retourné aucune couches.",layersSuccessfullyLoadedText:"Couches chargées avec succès.",layerAddedText:"Couche(s) ajoutée(s) avec succès à la carte",urlInvalidText:"L'adresse de serveur (url) n'est pas valide ou n'est pas un serveur WMS valide.",pleaseInputLayerNameText:"Veuillez saisir un nom de couche dans la boîte de texte ci-dessous.",warningText:"Avertissement",errorText:"Erreur"});}
if(GeoExt.ux.WMSBrowserStatusBar){Ext.apply(GeoExt.ux.WMSBrowserStatusBar.prototype,{text:'Prêt',defaultText:'Prêt',busyText:'Chargement des couches...'});}