Ext.namespace("GeoExt.ux.tree");GeoExt.ux.tree.LayerTreeBuilder=Ext.extend(Ext.tree.TreePanel,{CUSTOM_EVENTS:["layermanaged"],title:"Layers",otherLayersText:"Autres couches",baseLayersText:"Fond de carte",wmsLegendNodes:true,vectorLegendNodes:true,checkableContainerGroupNodes:true,checkableLeafGroupNodes:true,layerStore:null,enableDD:false,loader:{applyLoader:false,uiProviders:{"custom_ui":Ext.extend(GeoExt.tree.LayerNodeUI,new GeoExt.tree.TreeNodeUIEventMixin())}},root:{nodeType:"async",children:[]},initComponent:function(){this.addEvents(this.CUSTOM_EVENTS);this.plugins=this.plugins||[];this.plugins.push({ptype:"gx_treenodecomponent"});this.plugins.push(new GeoExt.ux.plugins.LayerTreeBuilderNodeAgent());GeoExt.ux.tree.LayerTreeBuilder.superclass.initComponent.call(this);if(!this.layerStore){this.layerStore=GeoExt.MapPanel.guess().layers;}
this.layerStore.on({"add":this.onLayerAdded,"remove":this.onLayerRemoved,scope:this});this.layerStore.treeBuilder=this;this.on({"afterrender":function(){this.layerStore.getCount()>0&&this.onLayerAdded(this.layerStore,this.layerStore.data.items);},scope:this});},onLayerRemoved:function(store,records,index){},onLayerAdded:function(store,records,index){Ext.each(records,function(record,index){var layer=record.getLayer();if(layer.displayInLayerSwitcher===false){if(layer.group&&layer.options&&layer.options.group){delete layer.group;delete layer.options.group;}
return;}else if(layer.options&&layer.options.group===undefined){layer.options.group=(layer.isBaseLayer)?this.baseLayersText:this.otherLayersText;}},this);Ext.each(records,function(record,index){var layer=record.getLayer();if(layer.displayInLayerSwitcher===false){return;}
var groupString=layer.options.group;if(groupString===""|| groupString==null){var layerNode={nodeType:"gx_layer",layer:layer.name,layerStore:this.layerStore,isLeaf:true,allowDrag:false,checked:layer.visibility};this.getRootNode().appendChild(layerNode);}else{var group=layer.options.group.split('/');this.addGroupNodes(group,this.getRootNode(),groupString,record);}
this.fireEvent('layermanaged',layer);},this);},addGroupNodes:function(groups,parentNode,groupString,layerRecord){var that=this;var group=groups.shift();var childNode=this.getNodeByText(parentNode,group);var layer=layerRecord.getLayer();if(!childNode){if(groups.length==0){var createNode;if(group==this.baseLayersText||group==this.otherLayersText)
{createNode=function(attr){return GeoExt.tree.LayerLoader.prototype.createNode.call(this,attr);}}
else{createNode=function(attr){var layerRecord=this.store.getByLayer(attr.layer);if(!layerRecord){console.warn("Le groupe '"+attr.text+"' n'est pas compatible avec l'arborescence.");attr.nodeType='node';this.uiProviders={"custom_ui":Ext.extend(GeoExt.tree.LayerNodeUI,new GeoExt.tree.TreeNodeUIEventMixin())};return GeoExt.tree.LayerLoader.prototype.createNode.call(this,attr);}
var layer=layerRecord.getLayer();if(layer instanceof OpenLayers.Layer.WMS&&that.wmsLegendNodes){attr.component={xtype:"gx_wmslegend",layerRecord:layerRecord,showTitle:false,hidden:!layer.visibility||layer.hideInLegend||!layer.inRange||layer.legende===false,cls:"gx-layertreebuilder-legend"};layer.hideInLegend&&layerRecord.set("hideInLegend",layer.hideInLegend);}else if(layer instanceof OpenLayers.Layer.Vector&&that.vectorLegendNodes){attr.component={xtype:"gx_vectorlegend",layerRecord:layerRecord,showTitle:false,hidden:!layer.visibility||layer.hideInLegend||!layer.inRange||layer.legende===false,cls:"gx-layertreebuilder-legend"};layer.hideInLegend&&layerRecord.set("hideInLegend",layer.hideInLegend);}
if(!layer.isBaseLayer){Ext.apply(attr,{listeners:{checkchange:this.store.treeBuilder.checkChange}});}
return GeoExt.tree.LayerLoader.prototype.createNode.call(this,attr);}}
childNode={text:group,layerStore:this.layerStore,allowDrag:false,nodeType:'gx_layercontainer',leaf:false,listeners:{insert:this.onLayerContainerNodeAdded,append:this.onLayerContainerNodeAdded,scope:this},loader:{filter:function(record){if(record.getLayer().options.group!==groupString&&groupString.indexOf(record.getLayer().options.group)===0){console.warn("Le groupe de la couche '"+record.getLayer().name+"' n'est pas compatible avec l'arborescence.");return false;}
return record.getLayer().options.group==groupString;},baseAttrs:{uiProvider:"custom_ui"},createNode:createNode}};}else{childNode={text:group,leaf:false,listeners:{append:this.onTreeNodeAppend,scope:this},allowDrag:false,nodeType:"node"};}
var checkableNode;if(childNode.nodeType=="gx_layercontainer"){checkableNode=(this.checkableLeafGroupNodes);}else{checkableNode=(this.checkableContainerGroupNodes&&this.checkableLeafGroupNodes);}
if(checkableNode&&group!=this.baseLayersText&&group!=this.otherLayersText&&(!layer||!layer.isBaseLayer))
{Ext.apply(childNode,{checked:false});Ext.apply(childNode.listeners,{'checkchange':function(node,checked){if(node.getUI().isChecked()){node.expand();node.eachChild(function(child){child.ui.toggleCheck(true);});}
if(!node.getUI().isChecked())
{node.expand();node.eachChild(function(child){child.ui.toggleCheck(false);});}}});}
parentNode.appendChild(childNode);childNode=this.getNodeByText(parentNode,group);}
if(layer&&layer.visibility){childNode.expand();}
if(groups.length!=0){this.addGroupNodes(groups,childNode,groupString,layerRecord);}},getNodeByText:function(node,text){for(var i=0;i<node.childNodes.length;i++)
{if(node.childNodes[i]['text']==text)
{return node.childNodes[i];}}
return false;},checkChange:function(node,checked){var unvisitedNodeIds={};var tree=node.getOwnerTree();tree.setNodeChecked=function(nodeOrId,checked,fireEvent){var node=(nodeOrId instanceof Ext.data.Node)?nodeOrId:this.getNodeById(nodeOrId);if(!node||typeof(node.attributes.checked)!="boolean"){return;}
if(checked===undefined){checked=!node.attributes.checked;}
node.attributes.checked=checked;if(node.ui&&node.ui.checkbox){node.ui.checkbox.checked=checked;}
if(fireEvent||(fireEvent===undefined)){node.fireEvent('checkchange',node,checked);}}
function updateNodeCheckbox(node){if(typeof(node.attributes.checked)!="boolean"){throw new Error(arguments.callee.name+" should only be called on checkbox nodes");}
var checkboxChildren=[];node.eachChild(function(child){if(typeof(child.attributes.checked)=="boolean")
checkboxChildren.push(child);},this);if(checkboxChildren.length==0){return node.attributes.checked;}
var allChecked=true;Ext.each(checkboxChildren,function(child){if(!updateNodeCheckbox(child)){allChecked=false;return false;}},this);tree.setNodeChecked(node,allChecked,false);delete unvisitedNodeIds[node.id];return allChecked;}
var checkboxNodes=[];tree.getRootNode().cascade(function(node){if(typeof(node.attributes.checked)=="boolean"){checkboxNodes.push(node);unvisitedNodeIds[node.id]=true;}},this);var node;while(node=checkboxNodes.shift()){if(unvisitedNodeIds[node.id])
updateNodeCheckbox(node);}},onLayerContainerNodeAdded:function(tree,parentNode,childNode){this.validateLayerContainerStatus(parentNode);},validateLayerContainerStatus:function(node){var show;Ext.each(node.childNodes,function(childNode,index){show=true;if(!childNode.layer|| !childNode.layer.visibility){show=false;return false;}});var checkbox=node.getUI().checkbox;if(checkbox){checkbox.checked=(show)?true:false;}
show&&node.ensureVisible();node.parentNode&&this.validateTreeNodeStatus(node.parentNode);},onTreeNodeAppend:function(tree,parentNode,childNode,index){this.validateTreeNodeStatus(parentNode);},validateTreeNodeStatus:function(node){var show;if(!this.checkableContainerGroupNodes||node.isRoot){return;}
Ext.each(node.childNodes,function(childNode,index){show=true;if(!childNode.getUI().isChecked()){show=false;return false;}});var checkbox=node.getUI().checkbox;if(checkbox){checkbox.checked=(show)?true:false;}
node.parentNode&&this.validateTreeNodeStatus(node.parentNode);}});Ext.namespace("GeoExt.ux.plugins");GeoExt.ux.plugins.LayerTreeBuilderNodeAgent=Ext.extend(Ext.util.Observable,{tree:null,init:function(tree,config){this.tree=tree;this.tree.on('layermanaged',this.onLayerManaged,this);},onLayerManaged:function(layer){layer.events.on({"visibilitychanged":function(event){var layer=event.object;if(layer.visibility){if(layer.layerContainer){layer.layerContainer.ensureVisible();layer.layerContainer.expand();}else if(layer.options&&layer.options.group){var groups=layer.options.group.split('/');this.expandTreeNodesFromGroup(groups,this.tree.getRootNode(),layer);}}},scope:this});},expandTreeNodesFromGroup:function(groups,parentNode,layer){var group=groups.shift();var childNode=parentNode.findChild("text",group);if(childNode){childNode.expand();if(groups.length>0){this.expandTreeNodesFromGroup(groups,childNode,layer);}else{layer.layerContainer=childNode;}}}});